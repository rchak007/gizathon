mod xgb_inference;

fn main(input_vector: Span<i32>) -> i32 {
    let tree_0 = xgb_inference::Tree {
    base_weights: array![-57, 305765060, -573309670, 137595320, 632931500, -1194513700, 44210187, 523003860, -100529570, 393762600, 237895210, -399656180, 47984300, 490603000, -768138900, 137050160, 698849460, -760967720, 403176500, 33704297, 125374540, -62713380, 233314040, -368167110, 160230000, -15777364, 59282495, 86264030, 236407800, 57417346, -1060411800, -400474880, 603954250, -70038990, 67430450, -391869460, -164846790, 63103770, -243317480, 233603760, -18989102].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 0, 0, 21, 23, 25, 27, 29, 31, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 35, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 0, 0, 22, 24, 26, 28, 30, 32, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 36, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 4, 5, 1, 0, 0, 4, 0, 9, 0, 0, 0, 0, 6, 1, 0, 1, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![11920000, 150000, 150000, 1810000, 3810000, 42010000, 480000, 1270000, -10520000, 160000, 237895210, -399656180, 47984300, 60000, 23200000, 0, 150000, -42930000, 3800000, 33704297, 125374540, 58650000, 233314040, -368167110, 160230000, -15777364, 59282495, 86264030, 236407800, 57417346, 100000, 1890000, 120000, -70038990, 67430450, -391869460, -164846790, 63103770, -243317480, 233603760, -18989102].span()
};
    let tree_1 = xgb_inference::Tree {
    base_weights: array![-450793, -754002000, 127277390, 78540533, -368024020, 27218976, 228524240, 310650950, -268161100, 142584180, 508852400, 148177880, -521483640, 252229830, -416623600, 555128560, 55494336, 52975070, -716501560, -67122390, 105061040, 19339220, -206819820, 58880900, 186092880, 130702880, -142485470, -236130740, 40786642].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 0, 9, 11, 13, 15, 0, 17, 19, 21, 23, 0, 25, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 0, 10, 12, 14, 16, 0, 18, 20, 22, 24, 0, 26, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 1, 7, 0, 0, 0, 0, 2, 9, 2, 5, 0, 3, 9, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-38660000, 5160000, 1550000, 78540533, -368024020, 11170000, 228524240, 1200000, -22070000, 1120000, 1910000, 148177880, 670000, -15490000, 160000, 160000, 55494336, 40000, 38600000, -67122390, 105061040, 19339220, -206819820, 58880900, 186092880, 130702880, -142485470, -236130740, 40786642].span()
};
    let tree_2 = xgb_inference::Tree {
    base_weights: array![140665, 113101090, -486468900, 3516940, 386841650, -267119900, -13042635, 238260800, -254877150, 177248390, 240408980, 272553660, -145406680, 310631130, -165063480, -392440620, 118046080, -61690137, 361407420, 33270703, 103006140, 186649370, 427649800, 156702600, -169554260, -665662600, -1858057, -47788480, 34668634, 133342660, 74802080, -3342422, 62262775, 34872363, 135613730, -2347383, 72863556, 25724240, -227604050, 69136940, -56201416, -1428281, 35089220].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 17, 19, 0, 21, 23, 25, 0, 27, 29, 0, 0, 31, 33, 35, 0, 37, 39, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 18, 20, 0, 22, 24, 26, 0, 28, 30, 0, 0, 32, 34, 36, 0, 38, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 8, 9, 3, 1, 0, 2, 8, 7, 0, 5, 0, 0, 0, 0, 5, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![560000, 140000, -21640000, 670000, 6810000, -267119900, 3720000, 40000, 930000, 177248390, 120000, 2460000, -145406680, 9200000, 2580000, 180000, 118046080, 19840000, 360000, 33270703, 103006140, 0, 300000, 1270000, -169554260, 1890000, 0, -47788480, 34668634, 133342660, 58650000, -3342422, 62262775, 34872363, 135613730, -2347383, 72863556, 25724240, -227604050, 69136940, -56201416, -1428281, 35089220].span()
};
    let tree_3 = xgb_inference::Tree {
    base_weights: array![1780101, -427130660, 74446670, 136142870, -206394780, 15705566, 134087400, 17085782, 56057056, 182404900, -133694030, 97127454, 351478520, 283302080, -260297600, 152871850, -136195900, 128959810, 49687357, 90892596, 24789375, 85942737, -329298730, 20741469, 60303674, 39959140, -141656250, -135447720, 9320567].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 0, 0, 0, 11, 13, 15, 17, 19, 21, 23, 25, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 0, 0, 0, 12, 14, 16, 18, 20, 22, 24, 26, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 1, 7, 0, 0, 0, 0, 0, 0, 2, 9, 8, 4, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-38660000, 5160000, 1550000, 20410000, -206394780, 9510000, 134087400, 17085782, 56057056, 2050000, -22070000, 40000, 220000, 600000, 3580000, 1880000, 2580000, 128959810, 49687357, 90892596, 24789375, 85942737, 30880000, 20741469, 60303674, 39959140, -141656250, -135447720, 9320567].span()
};
    let tree_4 = xgb_inference::Tree {
    base_weights: array![4692090, 69243340, -273735770, 2267330, 236541650, -148399540, -13701340, 137836450, -146972070, 104494130, 154071280, 159289770, -89235820, 186215170, -126421580, -339203170, 41144568, 85084420, 92902423, 15617462, 64027423, 96859660, 274736900, 106557810, -123803970, -460442240, 29150626, 201670510, -44261475, 112013620, -19552383, 19866927, 60483813, 16007637, 88721796, -7989141, 55940160, 14084590, -161890090, 18208536, 68529180, -49548166, 35378320, 47198392, 8210186].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 17, 19, 0, 21, 23, 25, 27, 29, 0, 0, 0, 31, 33, 35, 0, 37, 0, 39, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 18, 20, 0, 22, 24, 26, 28, 30, 0, 0, 0, 32, 34, 36, 0, 38, 0, 40, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 8, 9, 3, 1, 0, 2, 8, 3, 0, 7, 0, 0, 0, 0, 7, 0, 3, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 5, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![560000, 140000, -21640000, 670000, 6810000, -148399540, 3720000, 40000, 2330000, 104494130, 1030000, 2460000, -89235820, 9200000, 2580000, 270000, 9650000, 6500000, 92902423, 15617462, 64027423, 4370000, 300000, 1270000, -123803970, 3810000, 29150626, 160000, 360000, 330000, -19552383, 19866927, 60483813, 16007637, 88721796, -7989141, 55940160, 14084590, -161890090, 18208536, 68529180, -49548166, 35378320, 47198392, 8210186].span()
};
    let tree_5 = xgb_inference::Tree {
    base_weights: array![5319830, 53763100, -203768090, 3127144, 180157540, -4756529, -112100980, 54479960, -215513230, 230728560, 82176450, -67045470, 127431800, 122330570, -80107030, -337532890, 100363800, 97310840, 274006030, -45473828, 42699400, 12493946, 51221954, 88668480, 67734120, -115053320, 63639970, -21274884, -135933640, 47549124, -2385410, 37851642, 1609043, 14960449, 303050980, -16619531, -3843692, 10578498, 52555700, 30453050, -35898224, 20990450, 100702170].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 17, 19, 0, 21, 23, 25, 27, 29, 31, 33, 35, 0, 0, 0, 37, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 18, 20, 0, 22, 24, 26, 28, 30, 32, 34, 36, 0, 0, 0, 38, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 8, 8, 8, 4, 9, 0, 3, 4, 3, 4, 0, 0, 1, 3, 8, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![560000, 140000, 40000, 40000, 100000, -46060000, -112100980, 1480000, 100000, 860000, 270000, -67045470, 2460000, 6400000, 2330000, 70000, 2580000, 15870000, 380000, 19840000, 42699400, 12493946, 51221954, 10250000, 67734120, -115053320, 12020000, -21274884, -135933640, 47549124, -2385410, 37851642, 1609043, 14960449, -180000, -16619531, -3843692, 10578498, 52555700, 30453050, -35898224, 20990450, 100702170].span()
};
    let tree_6 = xgb_inference::Tree {
    base_weights: array![3448030, -187138510, 35692392, 54196970, -298310420, 11274458, 249505080, 4040899, 26456836, -104695460, -34324884, 172118850, -16343193, 22465782, 80835516, 55378930, 12716367, -72467490, 108219810, 73895050, -122259310, 165075050, 37837110, -1604649, 34322540, -48324448, 8257344, 15180176, 67091880, -1980029, 19745836].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 0, 0, 15, 17, 0, 0, 0, 0, 19, 21, 23, 25, 27, 29, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 0, 0, 16, 18, 0, 0, 0, 0, 20, 22, 24, 26, 28, 30, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 1, 7, 0, 0, 9, 3, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 1, 7, 0, 8, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-38660000, 5160000, 1580000, 20410000, 28170000, -27650000, 200000, 4040899, 26456836, -104695460, -34324884, 45150000, -4340000, 22465782, 80835516, 55378930, 12716367, 3580000, 170000, 1270000, 220000, 290000, 720000, -1604649, 34322540, -48324448, 8257344, 15180176, 67091880, -1980029, 19745836].span()
};
    let tree_7 = xgb_inference::Tree {
    base_weights: array![4701339, -141849290, 29460745, 45562207, -228677400, 150491920, 4665297, 3232695, 22488283, -79568580, -27459885, 180725670, 59959863, 63829755, -48098120, 198836720, 10808907, -2583750, 25706448, 8581725, 128342720, -91678440, 119712760, 15835782, 65246910, 51758954, -166987760, 47499670, 10883408, 21519482, -145938780, 4376133, 41346143, -10278340, 18808084, -6658946, -68485547, -77594653, 29548010, -52805380, 9915118].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 0, 0, 15, 17, 19, 21, 23, 0, 0, 0, 25, 27, 29, 31, 0, 0, 33, 35, 0, 0, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 0, 0, 16, 18, 20, 22, 24, 0, 0, 0, 26, 28, 30, 32, 0, 0, 34, 36, 0, 0, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 1, 9, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 1, 7, 9, 0, 0, 0, 1, 4, 3, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-38660000, 5160000, -22070000, 20410000, 28170000, 470000, 9650000, 3232695, 22488283, -79568580, -27459885, 61210000, 25070000, 3960000, 1550000, -36800000, 10808907, -2583750, 25706448, 3770000, 480000, 860000, 4400000, 15835782, 65246910, 0, 160000, 47499670, 10883408, 110000, 24330000, 4376133, 41346143, -10278340, 18808084, -6658946, -68485547, -77594653, 29548010, -52805380, 9915118].span()
};
    let tree_8 = xgb_inference::Tree {
    base_weights: array![3000643, -13956160, 131921190, 10718164, -115602830, 11075860, 47230548, 64021610, -18681238, 8434600, -166632810, 8074052, 91322560, -197106800, 12725970, -58695514, -24433888, -28150780, 19727228, 37104453, 113793550, 11288145, -79559125, 99767840, -25183687, -10296973, -519141, -7148, 18559375, 38411996, 14210860, -3006602, 39770425, -33419284, 7764074].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 0, 15, 17, 19, 21, 23, 0, 0, 25, 0, 27, 29, 0, 0, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 0, 16, 18, 20, 22, 24, 0, 0, 26, 0, 28, 30, 0, 0, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 6, 1, 0, 3, 0, 0, 0, 0, 7, 1, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1550000, 560000, 440000, 3580000, 4200000, 11075860, 47230548, 1880000, 3860000, 8434600, 18840000, 60000, 300000, 1890000, 400000, -58695514, -24433888, 1270000, 19727228, 190000, 1810000, 11288145, -79559125, 4370000, 2330000, -10296973, -519141, -7148, 18559375, 38411996, 14210860, -3006602, 39770425, -33419284, 7764074].span()
};
    let tree_9 = xgb_inference::Tree {
    base_weights: array![2196582, -85904724, 17091777, 27531445, -138453300, 5989425, 40739790, 2110391, 13353282, -52018800, -20669180, 17524043, -112861560, 41979883, -16621378, -11088828, -45341956, 25171777, 93610547, -54021625, -263151, 13220639, -5439258, 34310577, 8343086, 26989874, -8035719].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 0, 0, 0, 0, 13, 15, 17, 19, 0, 0, 21, 23, 0, 25, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 0, 0, 0, 0, 14, 16, 18, 20, 0, 0, 22, 24, 0, 26, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 7, 4, 0, 3, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-38660000, 5160000, 24520000, 20410000, 15890000, 20820000, 40739790, 2110391, 13353282, -52018800, -20669180, 13730000, 11620000, 2400000, 13980000, -11088828, -45341956, 190000, 420000, -54021625, 200000, 13220639, -5439258, 34310577, 8343086, 26989874, -8035719].span()
};
    let tree_10 = xgb_inference::Tree {
    base_weights: array![691291, -10350576, 84799120, 40034375, -30727362, 6965313, 30436993, -4407254, 62622460, -49368588, 47251694, -32445392, 43792056, 203438, 68192114, 55364060, -64190295, 25187227, 14905925, -10954835, -2424375, 16319884, 3386543, 28131270, 46878710, 1247813, 20137617, 3639106, -86951730, -8785677, 8684444, 3341680, 17080644, -45918400, 12707798, 4239522, -30619550, -4393184, 439629].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 23, 25, 27, 0, 29, 0, 0, 0, 0, 0, 31, 0, 0, 33, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 24, 26, 28, 0, 30, 0, 0, 0, 0, 0, 32, 0, 0, 34, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 1, 3, 0, 9, 0, 0, 6, 1, 7, 7, 0, 1, 0, 6, 1, 3, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1550000, 3580000, 440000, 1880000, -1610000, 6965313, 30436993, 60000, 140000, 0, 170000, 1270000, 0, 203438, 60000, 5160000, 860000, 25187227, 9940000, -10954835, -2424375, 16319884, 3386543, 28131270, 270000, 1247813, 20137617, 3860000, -1020000, 160000, 8684444, 3341680, 17080644, -45918400, 12707798, 4239522, -30619550, -4393184, 439629].span()
};
    let tree_11 = xgb_inference::Tree {
    base_weights: array![1722145, -5299659, 75164060, 5916361, -53460770, 27223712, 8800156, -5022684, 47145773, 13306152, -77194880, 18787590, -41142944, 73159910, -16668945, 4287109, 6054493, -31984033, -32337344, -1414557, 42474643, 3522960, -81237415, 26236618, 11100176, -10224181, 5334903, 1555488, 373711, -10842891, -2567227, 5355190, -25327657, 5322037, 19275743, -39030646, 10946661, -33521484, -4553027].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 23, 25, 27, 0, 0, 29, 31, 33, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 24, 26, 28, 0, 0, 30, 32, 34, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 4, 8, 0, 0, 0, 0, 0, 9, 0, 1, 9, 3, 0, 1, 0, 0, 0, 1, 9, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1580000, 560000, 280000, 26060000, 4200000, 27223712, 8800156, 11620000, -19170000, 2460000, 15890000, -4580000, 1250000, 45150000, 12830000, 1420000, 6054493, -31984033, 23200000, -7270000, 1880000, 110000, 2010000, 26236618, 11100176, -10224181, 5334903, 1555488, 373711, -10842891, -2567227, 5355190, -25327657, 5322037, 19275743, -39030646, 10946661, -33521484, -4553027].span()
};
    let tree_12 = xgb_inference::Tree {
    base_weights: array![757399, -4765253, 58619010, 23046835, -17298810, 21098439, 7040157, 12127539, 53379220, -46831290, -6972257, 22416434, -11978946, 17620197, 4794024, 28410043, -23812944, -2047656, 47173047, 46131772, 13438889, -56636720, 2688350, -6838220, 7319180, 15989864, 1562110, -1424824, 17177368, -2608477, 7786485, -24412105, -4264395, 14277037, -7838971].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 0, 15, 17, 0, 0, 0, 19, 21, 23, 25, 27, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 0, 16, 18, 0, 0, 0, 20, 22, 24, 26, 28, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 1, 8, 8, 1, 0, 0, 8, 1, 0, 2, 1, 0, 0, 0, 3, 2, 6, 5, 0, 3, 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1580000, 3770000, 280000, 90000, 3860000, 21098439, 7040157, 40000, 1810000, -46831290, 1130000, 300000, -11978946, 17620197, 4794024, 400000, 2300000, 60000, 1910000, 9200000, 1200000, -18200000, 170000, -6838220, 7319180, 15989864, 1562110, -1424824, 17177368, -2608477, 7786485, -24412105, -4264395, 14277037, -7838971].span()
};
    let tree_13 = xgb_inference::Tree {
    base_weights: array![654722, -6602728, 29119363, 19343144, -20833691, 64112660, 8710781, -4736133, 27685312, -30046173, -15705860, 21162540, 5759414, 29895053, -18452500, -20236035, 5252734, 36804080, 12006139, -1082609, -40369623, 1986797, 9967500, -6416544, -1006289, -7527539, -850313, 48591470, 9921973, -5425352, 27659296, -16795480, 21023672, -53247516, 20305860, 16775743, 1792969, -1833281, 5190977, 9123223, 2498027, -1402942, -26151390, 10343053, -2332588, -22557443, -6728692, -397910, 9535547].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 0, 27, 29, 31, 33, 0, 0, 0, 0, 0, 0, 35, 37, 0, 39, 41, 43, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 0, 28, 30, 32, 34, 0, 0, 0, 0, 0, 0, 36, 38, 0, 40, 42, 44, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 2, 2, 0, 0, 4, 6, 9, 0, 0, 0, 0, 2, 1, 0, 0, 4, 1, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 9, 1, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![30880000, 4520000, 790000, 250000, 4930000, 61210000, 100000, 60000, -2240000, -30046173, 16750000, 21162540, 5759414, 1100000, 20570000, 1270000, 5252734, 130000, 3960000, -10520000, 540000, 1986797, 9967500, -6416544, -1006289, -7527539, -850313, 2580000, 1880000, -5425352, 630000, -10790000, 11670000, -18770000, 20410000, 16775743, 1792969, -1833281, 5190977, 9123223, 2498027, -1402942, -26151390, 10343053, -2332588, -22557443, -6728692, -397910, 9535547].span()
};
    let tree_14 = xgb_inference::Tree {
    base_weights: array![262931, -3457037, 39278775, -10323461, 21312834, 5636719, 16051642, 11002298, -20682709, 33021262, 8403857, -9466719, 18028665, -31845276, -12023731, 12316348, 16732715, -5489356, 5351297, -17652246, 3491309, 27393054, -2432969, 17175640, -26076883, -3431426, 8980704, -8448307, 508125, -6022031, -1558301, 11253961, 3538289, -10182423, 4178848, 1281782, 11606339, -11504904, 3912656, -3078985, -722754].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 23, 0, 25, 27, 0, 29, 0, 31, 33, 35, 37, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 24, 0, 26, 28, 0, 30, 0, 32, 34, 36, 38, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 9, 1, 1, 7, 0, 0, 0, 1, 2, 7, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 6, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1580000, -3110000, 15870000, 3770000, 170000, 5636719, 16051642, 1880000, 3860000, 1120000, 720000, 590000, 13730000, -31845276, 1130000, 12316348, 160000, 2460000, 5351297, 1270000, 3491309, 60000, 16590000, 130000, 540000, -3431426, 8980704, 160000, 508125, -6022031, -1558301, 11253961, 3538289, -10182423, 4178848, 1281782, 11606339, -11504904, 3912656, -3078985, -722754].span()
};
    let tree_15 = xgb_inference::Tree {
    base_weights: array![474713, -5064055, 22200252, 11689512, -14230925, 13091884, 9260547, -5277012, 14156332, 5632650, -23196204, 22334961, -8280859, 18880437, 5300635, -21207910, 16935938, -53385070, -5849380, 9105157, 3221866, -4926445, 786016, 3321973, 23697482, -10247070, 16678671, 10504688, -17451855, -1777969, 24314732, -14758907, -24400266, -16523438, 669800, -1287383, 3924258, 8803165, 2791055, -3689258, -614356, 5594180, 1320645, -1082227, 5809336, 12030704, 2993766, -8011289, 631836, -1348937, 7366719].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 0, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 0, 0, 0, 0, 35, 37, 39, 41, 43, 0, 0, 45, 47, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 0, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 0, 0, 0, 0, 36, 38, 40, 42, 44, 0, 0, 46, 48, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 2, 0, 3, 0, 4, 0, 9, 2, 3, 0, 1, 9, 1, 0, 9, 2, 9, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 9, 1, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![30880000, 4520000, 790000, 0, 440000, 13091884, 100000, -5277012, -2240000, 110000, 1720000, 45150000, 12830000, -10160000, 9940000, 9510000, -33250000, 1130000, -58230000, 9105157, 3221866, -4926445, 786016, 2130000, 130000, 160000, 630000, 7520000, -17451855, -1777969, -15040000, 5480000, -24400266, -16523438, 2990000, -1287383, 3924258, 8803165, 2791055, -3689258, -614356, 5594180, 1320645, -1082227, 5809336, 12030704, 2993766, -8011289, 631836, -1348937, 7366719].span()
};
    let tree_16 = xgb_inference::Tree {
    base_weights: array![201126, -2213019, 31061954, -6599977, 13926115, 2119492, 13411485, -2605451, -27744873, 22242578, 4908447, -8897384, 14914485, -14824922, -12284961, 11008887, 8374688, -3252832, 10455782, -20636644, 10750451, 18281392, -3318223, -5325322, -901823, 5979141, -2363379, -5746484, 634219, 3558047, 725742, -8895557, 2053008, 4262217, -4609922, 2160469, 7894297, -596543, 190723, -2063731, -522188].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 23, 25, 0, 27, 29, 31, 33, 35, 0, 0, 37, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 24, 26, 0, 28, 30, 32, 34, 36, 0, 0, 38, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 9, 0, 4, 7, 0, 0, 4, 4, 0, 7, 7, 1, 0, 4, 3, 0, 0, 0, 8, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, -3110000, 37470000, 560000, 170000, 2119492, 13411485, 270000, 1110000, 1240000, 720000, 350000, 20820000, -14824922, 2670000, -1290000, 8374688, 2460000, 4200000, 140000, -7510000, 3580000, -3318223, -5325322, 15050000, 5979141, -2363379, 160000, 634219, 3558047, 725742, -8895557, 2053008, 4262217, -4609922, 2160469, 7894297, -596543, 190723, -2063731, -522188].span()
};
    let tree_17 = xgb_inference::Tree {
    base_weights: array![270835, -1653601, 24849454, 9284071, -5807314, 5651953, 10729141, 1548698, 15317500, -39665314, -1735284, 2108789, 434590, -5369987, 11539551, 10472696, 9261893, 5637774, -17693379, -11821172, 99777, -3440000, 545020, 5636758, -1531406, -421992, 10771289, 3048057, -18097917, -408867, 490586, 3725173, -112559, 1927434, -2998696, -12283888, -1601695].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 17, 19, 0, 0, 21, 23, 0, 25, 0, 0, 0, 27, 0, 29, 0, 0, 0, 31, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 18, 20, 0, 0, 22, 24, 0, 26, 0, 0, 0, 28, 0, 30, 0, 0, 0, 32, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 0, 1, 1, 0, 0, 6, 1, 0, 9, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 5, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 3580000, 37470000, 300000, 3860000, 16390000, 10729141, 190000, 530000, 1890000, -58230000, 2108789, 434590, 160000, 270000, 10472696, 590000, 5637774, -17693379, -11821172, 20820000, -3440000, 1880000, 5636758, -1531406, -421992, 1910000, 630000, 1590000, -408867, 490586, 3725173, -112559, 1927434, -2998696, -12283888, -1601695].span()
};
    let tree_18 = xgb_inference::Tree {
    base_weights: array![25661, -1730463, 18460677, -4960055, 9927399, 2587688, 10145391, 6057215, -10322806, 15610603, 3713672, -338889, 11780295, -15973164, -5976367, 7579102, 5921836, -2849219, 2466375, 6375911, -10326367, 5834668, 8901798, 6174219, -11780007, 4026914, -1492910, -2043281, 741667, -1301719, 2816016, -4066758, -95684, 181133, 4305469, 201108, 4691514, -7238894, -899858, 5977, 327773].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 23, 25, 0, 27, 0, 29, 31, 33, 0, 35, 37, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 24, 26, 0, 28, 0, 30, 32, 34, 0, 36, 38, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 9, 1, 1, 7, 0, 0, 9, 1, 0, 1, 9, 0, 0, 2, 3, 0, 0, 0, 3, 2, 3, 0, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1580000, -3110000, 28150000, 3770000, 170000, 2587688, 10145391, -15490000, 3860000, 1240000, 9940000, -27650000, 11170000, -15973164, 1130000, -1290000, 5921836, 160000, 2466375, 270000, 430000, 540000, 8901798, 130000, 3820000, 4026914, -1492910, -2043281, 2460000, -1301719, 2816016, -4066758, -95684, 181133, 4305469, 201108, 4691514, -7238894, -899858, 5977, 327773].span()
};
    let tree_19 = xgb_inference::Tree {
    base_weights: array![216033, -2120244, 11295345, 2279795, -11780317, 539297, 16605957, -3802714, 7429244, -21275356, 2747900, -2250820, 2520469, 22248593, 1620352, 2624721, -18166277, 19348567, 2785409, -29816210, 1125195, 12702500, -10382324, 26165430, 987188, 7672119, -3518694, -6001367, -8499219, 313652, 22800078, 6116051, -2846373, -7201953, -36153970, 4565886, -1379531, 633750, 4446563, -4489180, 504375, 2046446, 9101875, -22002, 3700219, -2961856, 1114541, -2346328, -81328, 7747412, 1605235, 2812793, 551035, -3063721, 1569375, -385898, -2854981, -14540420, -2305156, 1645313, 409336].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 0, 23, 0, 25, 27, 29, 31, 33, 35, 37, 39, 41, 0, 43, 45, 47, 0, 0, 49, 51, 53, 55, 57, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 0, 24, 0, 26, 28, 30, 32, 34, 36, 38, 40, 42, 0, 44, 46, 48, 0, 0, 50, 52, 54, 56, 58, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 3, 9, 8, 2, 0, 9, 9, 9, 4, 0, 0, 3, 0, 6, 7, 1, 2, 1, 0, 3, 0, 0, 0, 0, 1, 4, 0, 0, 2, 7, 1, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![220000, 40000, 860000, -15490000, 140000, 1860000, 61210000, -19170000, -8190000, -5570000, 550000, -2250820, 2520469, 7360000, 1620352, 410000, 170000, 140000, 1130000, 3740000, 11620000, 440000, 30880000, 2150000, 987188, 10250000, 10260000, 340000, -8499219, 313652, 3350000, 180000, 5480000, 1270000, 570000, 2580000, -1379531, 633750, 4446563, -4489180, 504375, 2046446, 9101875, -22002, 3700219, -2961856, 1114541, -2346328, -81328, 7747412, 1605235, 2812793, 551035, -3063721, 1569375, -385898, -2854981, -14540420, -2305156, 1645313, 409336].span()
};
    let tree_20 = xgb_inference::Tree {
    base_weights: array![123995, -1594889, 10253008, -7731973, -733654, 4842920, 6378672, -2847587, 6113532, 7058984, -1203516, 3689551, -6239141, 10009989, 1939941, 2550498, 834727, -842988, 301406, -1525558, 6971172, -9870509, -3159612, 3286192, 651914, -1931445, 4649062, -1646524, 347180, 6404414, 900521, 2180977, -1900345, -1277227, 78906, 1803750, 520781].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 0, 11, 13, 15, 17, 19, 21, 23, 25, 0, 0, 0, 0, 27, 29, 0, 31, 0, 0, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 0, 12, 14, 16, 18, 20, 22, 24, 26, 0, 0, 0, 0, 28, 30, 0, 32, 0, 0, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 9, 1, 0, 9, 7, 0, 1, 7, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![37470000, -58230000, 27910000, -7731973, -3110000, 870000, 6378672, 3770000, 170000, 15560000, 58650000, 300000, 3860000, 8300000, 9940000, 2550498, 834727, -842988, 301406, 1880000, 530000, -9870509, 200000, 3286192, 651914, 160000, 200000, -1646524, 347180, 6404414, 900521, 2180977, -1900345, -1277227, 78906, 1803750, 520781].span()
};
    let tree_21 = xgb_inference::Tree {
    base_weights: array![130463, -2141953, 6103639, 1214180, -14151349, 14801619, 950601, -3225206, 4993004, -19698047, 479883, 1818820, 7329766, 4042791, -3211289, 918880, -15012422, 13771223, 1601103, -23823958, -1464063, 783633, -887520, -1785078, 7628014, -2220391, 5997852, -5773047, -7795489, 214512, 4871836, 3287974, -4703223, -463066, -27971330, 633789, -1526328, 2838328, 609063, -2017902, 1866035, 504180, 2320898, -2173086, -204199, 174492, 2412914, -2004024, 184102, -2561778, -9208360].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 0, 23, 0, 25, 27, 29, 31, 33, 0, 0, 0, 35, 37, 39, 41, 43, 0, 0, 0, 45, 47, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 0, 24, 0, 26, 28, 30, 32, 34, 0, 0, 0, 36, 38, 40, 42, 44, 0, 0, 0, 46, 48, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 9, 9, 9, 5, 4, 9, 9, 4, 0, 0, 0, 2, 0, 7, 1, 1, 0, 0, 0, 0, 0, 7, 7, 0, 9, 4, 0, 0, 0, 6, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![140000, 40000, -22070000, -15490000, -5570000, 470000, 480000, -18770000, -8190000, 570000, 11620000, 1818820, 7329766, 1860000, -3211289, 190000, 9920000, 140000, 14550000, 1270000, -1464063, 783633, -887520, 170000, 850000, 25070000, -49240000, 150000, -7795489, 214512, 4871836, 190000, 17070000, -463066, 3740000, 633789, -1526328, 2838328, 609063, -2017902, 1866035, 504180, 2320898, -2173086, -204199, 174492, 2412914, -2004024, 184102, -2561778, -9208360].span()
};
    let tree_22 = xgb_inference::Tree {
    base_weights: array![-11001, -833551, 10519844, 1777279, -4045838, 1343906, 5202071, -84141, 9500893, -8200938, -1308145, 2658315, -5834883, 678828, 3583078, 921680, -9266146, 5715402, -3023877, -10635416, 1092734, 1840317, -3672266, -4198125, -5190938, 682457, 4124414, -2989014, 939750, -3664125, -411563, -173555, 496553, 1062593, -474844, -1578750, 164766, -1650439, 152285].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 0, 15, 17, 19, 0, 0, 21, 23, 25, 27, 29, 31, 33, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 0, 16, 18, 20, 0, 0, 22, 24, 26, 28, 30, 32, 34, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 7, 0, 2, 7, 0, 0, 2, 8, 0, 1, 8, 6, 0, 0, 3, 0, 0, 8, 5, 0, 9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 240000, 45150000, 2300000, 270000, 1343906, 5202071, 1120000, 40000, -8200938, 15870000, 40000, 740000, 678828, 3583078, 6500000, 26060000, 10250000, 90000, 300000, 2130000, -7900000, 37140000, 23200000, -5190938, 682457, 4124414, -2989014, 939750, -3664125, -411563, -173555, 496553, 1062593, -474844, -1578750, 164766, -1650439, 152285].span()
};
    let tree_23 = xgb_inference::Tree {
    base_weights: array![-94468, -777960, 8673125, 1334874, -3373963, 3471875, 4421719, -92057, 7259599, -6560781, -1193967, 1229141, 239414, 2653746, -3419671, 543047, 9077344, 607724, -7601172, 1113648, 4094297, -10815000, 619961, 1029219, 3509453, -2136377, 2030729, -3238360, -4412285, -816445, 785645, -4211133, 311016, 749609, -2443301, -1204141, 699180, 1362279, -446032, -1279102, 129434].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 0, 0, 19, 21, 0, 23, 25, 27, 29, 0, 31, 33, 0, 0, 35, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 0, 0, 20, 22, 0, 24, 26, 28, 30, 0, 32, 34, 0, 0, 36, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 7, 0, 2, 7, 4, 0, 0, 8, 0, 1, 0, 0, 0, 4, 0, 0, 7, 0, 9, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 240000, 45150000, 2300000, 270000, 2840000, 4421719, 13730000, 40000, -6560781, 15870000, 1229141, 239414, 11170000, 100000, 543047, 4520000, 720000, 26060000, -15490000, 4094297, 18210000, 2190000, 1029219, 3509453, 37140000, 14550000, 23200000, -4412285, -816445, 785645, -4211133, 311016, 749609, -2443301, -1204141, 699180, 1362279, -446032, -1279102, 129434].span()
};
    let tree_24 = xgb_inference::Tree {
    base_weights: array![-99494, 2408189, -1809632, 818325, 8101302, -5013390, 668587, 2557188, -2170703, 533724, 11751660, 723549, -7942155, 3493658, -5418262, -57386, 7797813, -5812305, 618815, -307090, 547266, 4137618, 844570, -1105469, 1754649, -15304558, -496931, 5269597, -640495, 380371, -8973515, -1718506, 3279199, 2776875, 294609, -63105, -2282852, 705908, -1899740, -906016, 606836, -859922, -5165672, -1455404, 788086, 2960742, 7909843, -936641, 1380859, 523398, -556875, -2006380, -3884844, -786699, 198594, -335801, 1535547, 49688, -904570, -25078, 259453, -742148, -98320, 202266, 957321, 306914, 2812734, 110039, 478984, -139863, -763008].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 0, 0, 0, 0, 39, 0, 41, 43, 45, 47, 49, 51, 53, 55, 0, 0, 0, 0, 0, 57, 0, 59, 0, 0, 61, 0, 63, 65, 0, 67, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 0, 0, 0, 0, 40, 0, 42, 44, 46, 48, 50, 52, 54, 56, 0, 0, 0, 0, 0, 58, 0, 60, 0, 0, 62, 0, 64, 66, 0, 68, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 6, 2, 8, 2, 1, 4, 0, 8, 0, 2, 1, 4, 3, 5, 1, 3, 0, 6, 0, 0, 0, 0, 1, 0, 0, 1, 3, 8, 3, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1130000, 190000, 2050000, 40000, 490000, 3770000, 480000, 10250000, 90000, 16220000, 740000, 3430000, 210000, 7360000, 140000, 5480000, 200000, 1270000, 60000, -307090, 547266, 4137618, 844570, 300000, 1754649, 160000, 22700000, 3980000, 60000, 5510000, 11180000, 60000, 2460000, 2776875, 294609, -63105, -2282852, 705908, 11170000, -906016, 2130000, -859922, -5165672, 12830000, 788086, 2080000, 5160000, -936641, 11620000, 523398, -556875, 1420000, -3884844, -786699, 198594, -335801, 1535547, 49688, -904570, -25078, 259453, -742148, -98320, 202266, 957321, 306914, 2812734, 110039, 478984, -139863, -763008].span()
};
    let tree_25 = xgb_inference::Tree {
    base_weights: array![-61868, -531989, 5968047, 840072, -2216891, 2230371, 3137813, -53633, 4550223, -4215469, -819821, 808828, 124980, 1397489, -3095625, 308047, 5754219, 587667, -4925168, -443389, 3901259, -5569075, 491641, 632031, 2245078, 1772596, -1189193, -675977, -7943066, 707344, -455859, 2694053, -40469, -1963781, -102715, -35479, 439688, -108262, 945337, -862441, 490957, -360469, 135117, -3167754, -1065391].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 0, 0, 19, 21, 0, 23, 25, 27, 29, 31, 33, 35, 0, 0, 37, 39, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 0, 0, 20, 22, 0, 24, 26, 28, 30, 32, 34, 36, 0, 0, 38, 40, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 7, 0, 2, 7, 4, 0, 2, 8, 0, 6, 0, 0, 2, 6, 0, 0, 9, 2, 9, 3, 1, 2, 0, 0, 3, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 240000, 45150000, 2300000, 270000, 2840000, 3137813, 1120000, 40000, -4215469, 650000, 808828, 124980, 370000, 740000, 308047, 4520000, -7900000, 3720000, -27650000, 200000, 12560000, 2030000, 632031, 2245078, 670000, 100000, 6640000, 4230000, 707344, -455859, 2694053, -40469, -1963781, -102715, -35479, 439688, -108262, 945337, -862441, 490957, -360469, 135117, -3167754, -1065391].span()
};
    let tree_26 = xgb_inference::Tree {
    base_weights: array![-38965, -561930, 3953516, 767937, -2507656, 1978125, 2667188, 3958, 3536865, -3372344, -1259477, 709594, 202031, 1743497, -2108622, 395889, 4603281, 21658, -4892969, 744312, 2659571, -6045234, 70547, 505625, 1796016, 893870, -1871745, -1535547, -2321563, -463008, 490645, -2349258, 164590, 290078, -1199531, -153738, 1255869, 278125, -1050879, -64805, -571016].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 0, 0, 19, 21, 0, 23, 25, 27, 29, 0, 31, 33, 0, 0, 35, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 0, 0, 20, 22, 0, 24, 26, 28, 30, 0, 32, 34, 0, 0, 36, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 7, 1, 2, 7, 8, 0, 0, 8, 0, 6, 0, 0, 0, 4, 0, 0, 7, 0, 9, 0, 0, 2, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1550000, 240000, 28150000, 2300000, 270000, 40000, 2667188, 13730000, 40000, -3372344, 650000, 709594, 202031, 11170000, 100000, 395889, 4520000, 870000, 11180000, -15490000, 2659571, 18210000, 2190000, 505625, 1796016, 720000, 6620000, 1420000, -2321563, -463008, 490645, -2349258, 164590, 290078, -1199531, -153738, 1255869, 278125, -1050879, -64805, -571016].span()
};
    let tree_27 = xgb_inference::Tree {
    base_weights: array![-29188, -364478, 4268359, 134773, -2782209, 1556934, 2267110, 445450, -3860059, -93294, -5007422, 536563, 129316, -67871, 2119401, -2498906, 121914, 387773, -628984, -571348, -2242656, 943750, -1356727, 3740104, 427455, -60508, -253984, -335357, 521140, 451574, -873945, 365938, 1408594, 364922, -308984].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 17, 19, 0, 0, 21, 23, 0, 0, 0, 25, 0, 0, 27, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 18, 20, 0, 0, 22, 24, 0, 0, 0, 26, 0, 0, 28, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 4, 0, 1, 8, 4, 0, 3, 1, 3, 0, 0, 0, 3, 3, 0, 0, 0, 3, 0, 0, 2, 0, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 560000, 45150000, 22700000, 40000, 2840000, 2267110, 3980000, 24330000, 1070000, 23340000, 536563, 129316, 440000, 7360000, -2498906, 121914, 387773, 4000000, -571348, -2242656, 110000, 3810000, -30330000, 2590000, -60508, -253984, -335357, 521140, 451574, -873945, 365938, 1408594, 364922, -308984].span()
};
    let tree_28 = xgb_inference::Tree {
    base_weights: array![-29096, 1261830, -909994, 446162, 4178255, -2237956, 123893, -1912305, 1207530, -86458, 1899668, 502679, -3650163, -2008008, 711311, -1058164, -223047, 2925817, -1306055, -299883, 260977, -628581, 1093535, -7214584, -73493, 1393511, -1453841, 263802, -252539, 575000, 4186998, -1513301, -51395, -1714713, 343164, -2545518, -934727, -487565, 361641, 969416, 1290469, -686191, 142057, 127207, -8496, 515859, -42305, 177422, 1652086, 189000, -350977, -618106, -153516, -14297, 146797, -240117, -39316, 358396, -395156, -45996, 109922].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 21, 23, 0, 25, 0, 27, 29, 31, 0, 0, 33, 0, 35, 37, 39, 41, 43, 0, 45, 47, 0, 49, 51, 53, 0, 0, 55, 0, 57, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 22, 24, 0, 26, 0, 28, 30, 32, 0, 0, 34, 0, 36, 38, 40, 42, 44, 0, 46, 48, 0, 50, 52, 54, 0, 0, 56, 0, 58, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 6, 2, 0, 2, 1, 9, 1, 8, 0, 0, 1, 4, 0, 4, 0, 0, 9, 2, 0, 0, 1, 0, 7, 1, 6, 4, 0, 0, 3, 1, 0, 6, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1130000, 190000, 2050000, 2460000, 490000, 3770000, -58230000, 290000, 40000, 16220000, 1899668, 3430000, 210000, -2008008, 630000, -1058164, 1270000, -19170000, 110000, -299883, 260977, 300000, 1093535, 270000, 22700000, 4070000, 1990000, 160000, -252539, 0, 150000, -1513301, 60000, 160000, 2130000, -2545518, -934727, 12830000, 361641, 12020000, 1290469, -686191, 1420000, 127207, -8496, 515859, -42305, 177422, 1652086, 189000, -350977, -618106, -153516, -14297, 146797, -240117, -39316, 358396, -395156, -45996, 109922].span()
};
    let tree_29 = xgb_inference::Tree {
    base_weights: array![-64838, -305481, 3028359, 931914, -848646, 1048731, 1642031, -674051, 1668332, -1418877, -458826, 357188, 93457, -2403203, 2432552, 138037, 3178906, -1706836, -192483, -897598, -7207, 986543, 108105, 437612, -293848, 374023, 5189063, -380107, 1096875, -130488, 196660, 141953, 11484, 1909453, 249258, 301460, -302867].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 0, 0, 19, 21, 23, 25, 0, 27, 0, 0, 0, 0, 29, 0, 31, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 0, 0, 20, 22, 24, 26, 0, 28, 0, 0, 0, 0, 30, 0, 32, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 0, 0, 1, 4, 0, 6, 9, 0, 9, 0, 0, 1, 1, 1, 2, 0, 6, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 3770000, 45150000, 1880000, 3960000, 2840000, 1642031, 60000, -16740000, -1418877, -58230000, 357188, 93457, 290000, 0, 3430000, 370000, -1706836, 4070000, -897598, -7207, 986543, 108105, 270000, -293848, 7520000, 100000, 9650000, 1096875, -130488, 196660, 141953, 11484, 1909453, 249258, 301460, -302867].span()
};
    let tree_30 = xgb_inference::Tree {
    base_weights: array![-11070, 916936, -644560, 606279, 1395703, -816065, 932344, 1208789, -538867, -1440385, 320495, -460039, 1647412, -2215723, 496317, -1971609, 1185078, 1247042, -435764, 3023134, -106201, -568750, -1073496, 1026250, -552344, -2546984, 494063, 103945, 392432, 604547, -448828, 584570, -1043359, 279668, 1173965, 263789, -393457, -6152, -249785, 134688, 378438, -387246, 138691, -925820, 33398, 24727, 172910, -223418, 21445, 25547, 216797, -559805, -151688].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 0, 11, 13, 15, 17, 0, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 0, 39, 41, 43, 45, 0, 0, 0, 47, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 0, 12, 14, 16, 18, 0, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 0, 40, 42, 44, 46, 0, 0, 0, 48, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 1, 6, 8, 0, 7, 0, 3, 8, 8, 5, 0, 3, 1, 1, 0, 3, 3, 9, 9, 9, 0, 0, 2, 0, 5, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1130000, 27910000, 4070000, 40000, 1395703, 720000, 932344, -3130000, 90000, 220000, 120000, -460039, 400000, 3740000, 12570000, 37140000, 200000, 4130000, -12560000, -19170000, -4420000, 1270000, -1073496, 370000, 12870000, 540000, 1760000, 103945, 392432, 604547, 23340000, 6620000, 5480000, 279668, 1173965, 263789, -393457, -6152, -249785, 134688, 378438, -387246, 138691, -925820, 33398, 24727, 172910, -223418, 21445, 25547, 216797, -559805, -151688].span()
};
    let tree_31 = xgb_inference::Tree {
    base_weights: array![19640, -148035, 2161953, -2769531, -18800, 1186289, 725293, -1311914, 65625, -105725, 792539, 277930, 18281, 579420, -406005, 85104, 1946484, -1063867, -166330, -51563, 552422, 1472109, -6123, 497871, -106246].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 0, 0, 13, 0, 0, 0, 15, 17, 19, 21, 0, 23, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 0, 0, 14, 0, 0, 0, 16, 18, 20, 22, 0, 24, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 9, 0, 0, 6, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![58650000, -58230000, 61210000, 28170000, 3960000, 1186289, 84900000, -1311914, 65625, 3770000, 792539, 277930, 18281, 11170000, 3860000, 3580000, 13730000, -1063867, 210000, -51563, 552422, 1472109, -6123, 497871, -106246].span()
};
    let tree_32 = xgb_inference::Tree {
    base_weights: array![47949, -147855, 1534961, 348036, -875859, 793862, 1008398, -14938, 1019291, -1377149, -353261, 1017656, 46875, 455593, -2599121, 179297, 1521875, 24121, -2151856, 347695, 67852, -800726, 976758, -211406, -898711, 461719, -184922, 210879, 561797, 397881, -283686, -117344, -1115098, -582891, 410977, 640059, 77099, 154658, 36973, -389203, 38401].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 19, 0, 21, 23, 25, 27, 29, 31, 0, 0, 33, 35, 0, 0, 37, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 20, 0, 22, 24, 26, 28, 30, 32, 0, 0, 34, 36, 0, 0, 38, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 7, 1, 3, 7, 8, 0, 3, 2, 0, 6, 0, 0, 2, 0, 9, 9, 4, 0, 0, 0, 9, 2, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1550000, 240000, 28150000, 1720000, 270000, 40000, 1008398, 1480000, 1760000, -1377149, 930000, 16390000, 46875, 110000, 16590000, -4580000, -35880000, -1020000, 11180000, 347695, 67852, -10520000, 560000, -211406, -898711, 1100000, -184922, 210879, 561797, 397881, 1280000, -117344, -1115098, -582891, 410977, 640059, 77099, 154658, 36973, -389203, 38401].span()
};
    let tree_33 = xgb_inference::Tree {
    base_weights: array![20663, -107129, 1652266, 25410, -2101563, 191045, 857109, -1209158, 234574, -1335410, 49648, -570459, -947813, 1134375, 72987, 141574, -833203, 403750, 529219, 464399, -561675, -84258, 110016, 27344, 174531, 280566, -84160, -312188, 50127].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 0, 0, 15, 0, 17, 19, 21, 0, 23, 0, 25, 27, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 0, 0, 16, 0, 18, 20, 22, 0, 24, 0, 26, 28, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 0, 9, 1, 0, 0, 3, 9, 0, 0, 9, 0, 1, 8, 0, 0, 8, 0, 5, 8, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 23200000, 45150000, -38660000, 24330000, 191045, 857109, 6370000, -22070000, -1335410, 49648, -39410000, -947813, 1770000, 60000, 9200000, -833203, 40000, 529219, 150000, 220000, -84258, 110016, 27344, 174531, 280566, -84160, -312188, 50127].span()
};
    let tree_34 = xgb_inference::Tree {
    base_weights: array![-5038, -112079, 1366094, -51, -1792481, 493359, 728555, -1041493, 176798, -1135078, 39727, 173984, 35039, -500293, -805664, 114799, 510117, 102734, -708223, 347583, -245387, -67383, 83578, -128932, 187383, -381914, -1016].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 0, 0, 0, 17, 0, 19, 0, 21, 0, 23, 25, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 0, 0, 0, 18, 0, 20, 0, 22, 0, 24, 26, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 0, 9, 1, 4, 0, 3, 6, 0, 0, 0, 0, 9, 0, 8, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![27910000, 23200000, 45150000, -38660000, 24330000, 2840000, 728555, 6370000, 4070000, -1135078, 39727, 173984, 35039, -39410000, -805664, 60000, 510117, 9200000, -708223, 1880000, 90000, -67383, 83578, -128932, 187383, -381914, -1016].span()
};
    let tree_35 = xgb_inference::Tree {
    base_weights: array![-25207, 380148, -301420, 24355, 1680664, -880444, 66496, -1170859, 337603, -27734, 2541797, -1586589, 24023, -684844, 251781, -514609, -70820, 1085156, -45551, -136348, 123867, 873203, 215273, -2820469, -35391, -417070, 424665, 141829, 433594, -474089, 695592, -365703, -1044531, -179557, 120573, 349297, -104062, 431087, -136088, 109898, -282026, 423428, -58242, -65918, -14883, 51914, 2344, 8281, -60313, -177305, 173320, 42826, -183234].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 27, 0, 0, 0, 29, 0, 0, 0, 0, 31, 33, 0, 35, 37, 0, 39, 41, 0, 0, 43, 45, 0, 47, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 28, 0, 0, 0, 30, 0, 0, 0, 0, 32, 34, 0, 36, 38, 0, 40, 42, 0, 0, 44, 46, 0, 48, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 6, 2, 1, 2, 7, 9, 0, 1, 0, 2, 4, 2, 0, 6, 0, 0, 0, 9, 0, 0, 0, 0, 0, 1, 0, 2, 4, 0, 9, 7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1130000, 190000, 2010000, 290000, 490000, 270000, -58230000, 1880000, 530000, 16220000, 740000, 210000, 1280000, -684844, 4070000, -514609, -70820, 1085156, -5180000, -136348, 123867, 873203, 215273, 4930000, 3430000, -417070, 1740000, 130000, 433594, -21230000, 170000, -365703, -1044531, 2130000, 20250000, 349297, 1770000, 160000, 15050000, 109898, -282026, 423428, -58242, -65918, -14883, 51914, 2344, 8281, -60313, -177305, 173320, 42826, -183234].span()
};
    let tree_36 = xgb_inference::Tree {
    base_weights: array![-20404, 329241, -258689, 47164, 1355664, -713647, 31235, -936797, 303618, -23698, 2051270, -1270269, 1758, -582129, 187719, -411719, -56680, 922383, -21137, -115898, 105234, 698555, 182930, -2256406, -30078, -354492, 339621, 93164, 368555, 494629, -394318, -292578, -835625, -152604, 102474, 931510, -83438, 301335, -106160, 216445, -164004, -337477, 55162, -56016, -12656, 44121, 1992, 341250, 77930, 19688, -41133, -150703, 126019, 41587, -124453].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 27, 0, 0, 0, 29, 0, 0, 0, 0, 31, 33, 0, 35, 37, 0, 39, 41, 0, 0, 43, 45, 47, 49, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 28, 0, 0, 0, 30, 0, 0, 0, 0, 32, 34, 0, 36, 38, 0, 40, 42, 0, 0, 44, 46, 48, 50, 52, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 6, 2, 1, 2, 7, 9, 0, 1, 0, 2, 4, 2, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 4, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1130000, 190000, 2010000, 290000, 490000, 270000, -58230000, 1880000, 530000, 16220000, 740000, 210000, 1280000, -582129, 4070000, -411719, -56680, 922383, 9510000, -115898, 105234, 698555, 182930, 4930000, 3430000, -354492, 1740000, 130000, 368555, 8300000, 13980000, -292578, -835625, 2130000, 20250000, 1890000, 630000, 160000, 200000, 216445, -164004, -337477, 55162, -56016, -12656, 44121, 1992, 341250, 77930, 19688, -41133, -150703, 126019, 41587, -124453].span()
};
    let tree_37 = xgb_inference::Tree {
    base_weights: array![-19164, 358047, -172736, -154297, 712467, -326391, 546441, -824219, 889160, 783984, 302095, -483819, 287109, 1216992, 8333, -336885, -151172, 454863, 174740, 5915, 656328, -667940, 295480, 960156, -209440, 464453, 33516, 171094, -63438, -13418, -54609, -10781, 89414, -101406, 54844, 66602, 261563, -518555, -682793, 469688, -93359, 26250, 366563, -178320, 131641, 24297, 66211, 8750, -59453, -426523, -115215, 190938, 43906, 1699, -43711, 60703, -12070].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 23, 25, 27, 0, 29, 0, 31, 33, 35, 37, 39, 41, 43, 0, 0, 45, 0, 0, 0, 0, 0, 47, 0, 0, 0, 49, 0, 51, 53, 0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 24, 26, 28, 0, 30, 0, 32, 34, 36, 38, 40, 42, 44, 0, 0, 46, 0, 0, 0, 0, 0, 48, 0, 0, 0, 50, 0, 52, 54, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 5, 6, 1, 9, 9, 0, 0, 0, 9, 0, 7, 1, 8, 0, 0, 0, 0, 8, 0, 1, 6, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3770000, 300000, 580000, 190000, 530000, -4340000, -22070000, 1880000, 160000, 783984, -10490000, 37140000, 170000, 35810000, 100000, -336885, 2930000, 454863, 25070000, 90000, 1270000, 22700000, 140000, 1240000, 720000, 464453, 33516, 11620000, -63438, -13418, -54609, -10781, 89414, 1770000, 54844, 66602, 261563, 3860000, -682793, 15560000, 42010000, 26250, 366563, -178320, 4200000, 24297, 66211, 8750, -59453, -426523, -115215, 190938, 43906, 1699, -43711, 60703, -12070].span()
};
    let tree_38 = xgb_inference::Tree {
    base_weights: array![1275, -1026823, 47988, -477539, 15469, -70628, 324336, 145431, -541250, 1092500, 64014, 337939, -331133, -1400625, -101420, 97793, 360791, 277783, -133116, 22917, 776680, -404414, -68359, -372005, -588711, -642057, 90061, -172526, 136992, 35648, -107531, -59082, 203027, 457102, 7422, 74625, -111539, -32637, -134766, -4922, -284004, 42469, 6164, 35039, -112676].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 0, 27, 29, 31, 33, 0, 35, 37, 0, 39, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 0, 28, 30, 32, 34, 0, 36, 38, 0, 40, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 3, 0, 0, 3, 3, 8, 3, 0, 2, 0, 2, 6, 1, 0, 0, 0, 6, 6, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 4000000, -477539, 15469, 1480000, 5030000, 70000, 1720000, 15050000, 2460000, 9200000, 110000, 60000, 5480000, 97793, 360791, 2460000, 170000, 190000, 14550000, -404414, 170000, 16590000, -588711, 6620000, 410000, 160000, 136992, 35648, -107531, -59082, 203027, 457102, 7422, 74625, -111539, -32637, -134766, -4922, -284004, 42469, 6164, 35039, -112676].span()
};
    let tree_39 = xgb_inference::Tree {
    base_weights: array![-11546, -872917, 27782, -405938, 13125, 280880, -72982, 516587, -196987, -290290, 220238, -201641, 858203, -234492, 30729, 123665, -565418, 561084, 9738, -140859, -17285, 22559, 1272266, 53555, -176563, -126504, 352300, -1422813, -192157, 51660, 256922, 203181, -160742, 21563, -21289, 53672, -26758, 506156, -120352, -69199, -10254, 239492, 33248, -96035, -485537, 36343, -173359, 527, 20313, 108516, -1846, -111656, 43125].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 21, 0, 23, 25, 27, 29, 31, 0, 33, 35, 37, 0, 39, 0, 41, 43, 45, 47, 0, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 22, 0, 24, 26, 28, 30, 32, 0, 34, 36, 38, 0, 40, 0, 42, 44, 46, 48, 0, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 1, 0, 0, 4, 3, 9, 4, 0, 3, 0, 2, 0, 2, 1, 0, 3, 4, 0, 0, 0, 9, 0, 0, 0, 2, 0, 3, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 3770000, -405938, 13125, 130000, 3820000, -15490000, 260000, 9650000, 5030000, 0, 110000, -234492, 370000, 4370000, 13980000, 4000000, 130000, -140859, 2150000, 1270000, -2240000, 53555, 2130000, -126504, 560000, 10250000, 1250000, 1760000, 256922, 2460000, 23200000, 21563, -21289, 53672, -26758, 506156, -120352, -69199, -10254, 239492, 33248, -96035, -485537, 36343, -173359, 527, 20313, 108516, -1846, -111656, 43125].span()
};
    let tree_40 = xgb_inference::Tree {
    base_weights: array![-17515, -742057, 15684, -345059, 11133, 189640, -75604, -44974, 559592, -252876, 97249, -230039, 270964, 521836, 194678, -403802, 61719, 169358, -135286, -19336, -715234, 250938, -220898, -240000, 689355, -74922, -884635, -124512, 198359, 281179, -5566, -99883, 46777, -102148, 43340, -50918, -270938, -107109, 28125, -199336, 9668, -87773, 334258, -98687, 188242, -80771, -423086, -58828, -10586, 74150, 469, 109541, 12891, 15402, -60586, 26172, -11191].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 21, 0, 23, 25, 27, 29, 31, 33, 35, 0, 37, 39, 41, 43, 45, 47, 49, 51, 53, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 22, 0, 24, 26, 28, 30, 32, 34, 36, 0, 38, 40, 42, 44, 46, 48, 50, 52, 54, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 2, 0, 0, 2, 2, 1, 2, 4, 4, 1, 3, 0, 6, 3, 1, 2, 4, 1, 0, 0, 0, 0, 2, 3, 9, 0, 0, 7, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 740000, -345059, 11133, 380000, 2050000, 4370000, 420000, 300000, 630000, 3580000, 400000, 521836, 60000, 1250000, 12600000, 3350000, 1740000, 140000, 9200000, 250938, 10250000, 1880000, 490000, 930000, -21230000, 2130000, 20250000, 870000, 12020000, -99883, 8630000, -102148, 43340, -50918, -270938, -107109, 28125, -199336, 9668, -87773, 334258, -98687, 188242, -80771, -423086, -58828, -10586, 74150, 469, 109541, 12891, 15402, -60586, 26172, -11191].span()
};
    let tree_41 = xgb_inference::Tree {
    base_weights: array![-17837, -630729, 10292, -293320, 9492, 129032, -75220, 30146, 486589, -288281, 55625, -396016, 140707, -74609, 785840, -551514, 10986, 20573, 134531, -182539, -15469, 443555, -15755, -74590, 41016, 267383, 70430, 29531, -341982, -75846, 54297, -27170, 140402, -59010, 44602, -96211, 110977, -49980, -7313, -39059, 27096, 56680, -22617].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 0, 0, 0, 0, 33, 0, 0, 0, 0, 35, 0, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 0, 0, 0, 0, 34, 0, 0, 0, 0, 36, 0, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 2, 0, 0, 6, 2, 1, 2, 4, 6, 0, 1, 0, 2, 0, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 1130000, -293320, 9492, 190000, 2010000, 290000, 490000, 210000, 4070000, 1880000, 530000, 16220000, 740000, 6620000, 20570000, 220000, 134531, -182539, -15469, 443555, 4400000, -74590, 41016, 267383, 70430, 1200000, -341982, 2130000, 54297, 13130000, 19840000, -59010, 44602, -96211, 110977, -49980, -7313, -39059, 27096, 56680, -22617].span()
};
    let tree_42 = xgb_inference::Tree {
    base_weights: array![-11340, -536068, 12683, -249316, 8086, 159231, -45589, 28958, 518203, -527734, -1719, -35073, 138809, 376992, 19434, -63477, -221426, 359277, -36058, -210889, 170871, -15430, 34805, 191875, -72246, -212964, 70110, -123188, 27451, 189961, -3516, -2145, -248584, 67383, -20539].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 0, 0, 21, 0, 0, 23, 25, 27, 29, 0, 0, 0, 0, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 0, 0, 22, 0, 0, 24, 26, 28, 30, 0, 0, 0, 0, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 1, 0, 0, 0, 1, 1, 0, 0, 2, 6, 0, 0, 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 3770000, -249316, 8086, 11170000, 3960000, 3580000, 13730000, 4930000, 210000, 60000, 138809, 376992, 25070000, -63477, -221426, 400000, 1720000, 290000, 0, -15430, 34805, 191875, -72246, 1480000, -18770000, -123188, 27451, 189961, -3516, -2145, -248584, 67383, -20539].span()
};
    let tree_43 = xgb_inference::Tree {
    base_weights: array![-7721, -455599, 12754, -211934, 6914, 144346, -39600, 285807, -85889, -258919, 32601, -100234, 491357, 35391, -231797, -328906, 76641, 346250, -15909, -162891, -4167, 256417, 320391, -110391, -5508, -433789, -36914, 128203, 3281, -189974, 79759, -58535, -14766, 3281, -5156, 107949, -54609, -55137, -164109, -16797, 3047, 9648, -192686, 57566, -22195].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 21, 0, 23, 25, 0, 27, 29, 31, 33, 35, 0, 0, 0, 37, 39, 0, 0, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 22, 0, 24, 26, 0, 28, 30, 32, 34, 36, 0, 0, 0, 38, 40, 0, 0, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 1, 0, 0, 4, 1, 9, 2, 4, 1, 2, 0, 0, 0, 0, 0, 0, 3, 0, 0, 9, 0, 0, 0, 0, 2, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 3770000, -211934, 6914, 100000, 5480000, -15490000, 370000, 130000, 8300000, 430000, 7520000, 35391, 2130000, 17070000, 76641, 9510000, 1720000, 0, 2150000, -2240000, 320391, -110391, -5508, 9200000, 2590000, 128203, 3281, 1250000, 5510000, -58535, -14766, 3281, -5156, 107949, -54609, -55137, -164109, -16797, 3047, 9648, -192686, 57566, -22195].span()
};
    let tree_44 = xgb_inference::Tree {
    base_weights: array![-7698, -387240, 9671, -180117, 5859, 112623, -31283, 17682, 374922, -371973, -304, -29548, 101836, 272344, 14746, -39727, -163594, 271094, -26144, -158301, 121819, -34245, 24258, 132969, -36797, -84476, 126725, -86695, 13389, 145313, -5801, -12539, -2871, -66730, 8255, 167, 75840].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 0, 0, 21, 0, 0, 23, 25, 27, 29, 31, 0, 0, 0, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 0, 0, 22, 0, 0, 24, 26, 28, 30, 32, 0, 0, 0, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 1, 0, 0, 0, 1, 1, 0, 0, 2, 6, 0, 0, 0, 0, 0, 3, 5, 1, 1, 0, 0, 0, 0, 2, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-58230000, 28170000, 3770000, -180117, 5859, 11170000, 3960000, 3580000, 13730000, 4930000, 210000, 60000, 101836, 272344, 25070000, -39727, -163594, 400000, 360000, 290000, 0, 16590000, 24258, 132969, -36797, 2000000, 110000, -86695, 13389, 145313, -5801, -12539, -2871, -66730, 8255, 167, 75840].span()
};
    let tree_45 = xgb_inference::Tree {
    base_weights: array![-2683, 62634, -82661, 243799, 13861, -597266, -26576, 58203, 231445, -102665, 145000, -228340, -40430, -153105, 8929, -69336, 123516, 68917, -202521, -111816, 218522, -119531, 57440, -117500, 25723, 86543, -15755, -271045, -14844, -60059, -15625, 328516, -1172, 37734, -286230, 117458, -35634, -43799, -527, 3828, -9961, -37922, -115225, 4063, -15000, -6094, -938, 118984, 24844, 22266, -45410, 22266, -3398, -98164, -24492, -26914, 48984, -23297, 4055].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 31, 33, 35, 37, 0, 0, 39, 41, 43, 0, 45, 47, 49, 51, 53, 55, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 32, 34, 36, 38, 0, 0, 40, 42, 44, 0, 46, 48, 50, 52, 54, 56, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 1, 0, 9, 6, 0, 1, 9, 0, 0, 0, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 590000, 210000, 7520000, 5480000, 12510000, -58230000, 190000, 231445, 3770000, -30330000, -228340, -40430, -153105, 2460000, 150000, 123516, 1890000, 17070000, 18210000, 300000, 1420000, 630000, 2930000, 25723, 86543, 810000, 10250000, 20410000, -60059, 45150000, 2190000, 15870000, 2860000, 740000, 300000, 2670000, -43799, -527, 3828, -9961, -37922, -115225, 4063, -15000, -6094, -938, 118984, 24844, 22266, -45410, 22266, -3398, -98164, -24492, -26914, 48984, -23297, 4055].span()
};
    let tree_46 = xgb_inference::Tree {
    base_weights: array![-5078, 51881, -74735, 212695, 8707, -507552, -27384, 55692, 196758, -76769, 105000, -194063, -34336, -130137, 2623, -51693, 105000, -327474, -21510, 297852, 31966, -16262, 76875, -91172, 21855, -25605, -121758, 59766, -82335, 119687, -820, -30773, 165137, -135781, 10428, -33955, -469, 73535, -3594, -34434, -3926, -44531, 15840, 7617, 60977, -79336, -11250, 26066, -6500].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 31, 33, 0, 35, 0, 0, 0, 37, 39, 0, 0, 41, 43, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 32, 34, 0, 36, 0, 0, 0, 38, 40, 0, 0, 42, 44, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 1, 0, 9, 6, 0, 2, 2, 0, 0, 0, 6, 1, 0, 0, 1, 0, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 590000, 210000, 7520000, 5480000, 12510000, -58230000, 190000, 196758, 110000, 640000, -194063, -34336, -130137, 3960000, 150000, 105000, 10250000, 3770000, 61210000, 350000, 300000, 76875, 2930000, 21855, -25605, -121758, 1890000, 17070000, 119687, -820, 1680000, 14400000, 290000, 440000, -33955, -469, 73535, -3594, -34434, -3926, -44531, 15840, 7617, 60977, -79336, -11250, 26066, -6500].span()
};
    let tree_47 = xgb_inference::Tree {
    base_weights: array![-3826, 45086, -63659, 185010, 7523, -431380, -23424, 52176, 167227, -60478, 84089, -164941, -29180, -110625, 2079, -38281, 89238, -278255, -12891, -87598, 134310, -13990, 65391, -31211, 20605, -21738, -103477, 46484, -70654, -44355, -18229, 95781, 65391, 32988, -34066, 18574, -4141, 62520, -1925, -5578, -35420, -7500, -703, 39660, -20361, -50479, -2065].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 31, 33, 0, 0, 35, 0, 0, 37, 39, 0, 41, 0, 43, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 32, 34, 0, 0, 36, 0, 0, 38, 40, 0, 42, 0, 44, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 1, 0, 9, 6, 0, 2, 9, 0, 0, 0, 6, 0, 0, 0, 9, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 590000, 210000, 7520000, 5480000, 12510000, -58230000, 190000, 167227, 110000, -30330000, -164941, -29180, -110625, 3960000, 160000, 89238, 10250000, -8190000, 18210000, 640000, 210000, 65391, -31211, 1270000, -21738, -103477, 1890000, 1150000, -44355, 45150000, 95781, 15870000, 32988, 3430000, 18574, -4141, 62520, -1925, -5578, -35420, -7500, -703, 39660, -20361, -50479, -2065].span()
};
    let tree_48 = xgb_inference::Tree {
    base_weights: array![-3619, 36678, -52898, 159521, 3793, -366667, -18615, 46931, 142148, -103795, 33766, -140215, -24785, -94043, 3111, -29557, 75879, -87949, -23372, 104395, 499, -10489, 55547, -24961, 18066, -11396, 1172, 193652, 12109, -88225, 52214, -101875, 9834, 15762, -3281, -1172, 78242, -4365, 17813, -42832, 35859, 7884, 50625, 11836, -44121, 19779, -7344].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 0, 25, 27, 29, 31, 0, 0, 33, 0, 0, 35, 37, 39, 41, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 0, 26, 28, 30, 32, 0, 0, 34, 0, 0, 36, 38, 40, 42, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 3, 0, 9, 6, 0, 1, 0, 0, 0, 0, 6, 0, 0, 0, 1, 8, 0, 4, 0, 0, 0, 0, 0, 1, 0, 7, 5, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 590000, 210000, 7520000, 200000, 12510000, -58230000, 190000, 142148, 3860000, 9510000, -140215, -24785, -94043, 3960000, 160000, 75879, -87949, 4930000, 40000, 18210000, 300000, 55547, -24961, 1270000, -11396, 1172, 1770000, 4930000, 930000, 790000, 1240000, 2330000, 15762, -3281, -1172, 78242, -4365, 17813, -42832, 35859, 7884, 50625, 11836, -44121, 19779, -7344].span()
};
    let tree_49 = xgb_inference::Tree {
    base_weights: array![-2120, 13864, -96211, -9033, 58965, -79922, -47700, 10568, -188086, -32275, 110577, -13337, -33594, 46354, -51535, -119180, 14063, 10156, -59961, 146680, -7324, -10547, 11816, 107983, -68359, 5966, -59033, 117, 6211, -30312, -31230, 61068, 220078, -15234, 7227, -1172, 18359, -20537, 46190, -74766, -4380, -7526, 29141, -938, -10898, -7734, 33281, 10313, 77373, 1699, 6563].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 21, 0, 23, 25, 0, 27, 0, 29, 31, 33, 0, 35, 37, 39, 41, 0, 0, 0, 43, 0, 45, 47, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 22, 0, 24, 26, 0, 28, 0, 30, 32, 34, 0, 36, 38, 40, 42, 0, 0, 0, 44, 0, 46, 48, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 6, 2, 1, 9, 0, 3, 5, 1, 9, 5, 3, 0, 8, 9, 0, 0, 0, 2, 5, 1, 0, 0, 0, 2, 9, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4160000, 190000, 4230000, 22700000, -33250000, -79922, 6830000, 120000, 24330000, -49240000, 2630000, 3980000, -33594, 70000, -4420000, -119180, 11620000, 10156, 2000000, 120000, 3430000, -10547, 11180000, 160000, 110000, -5090000, -59033, 117, 6211, 6620000, -31230, 5250000, 110000, -15234, 7227, -1172, 20410000, -20537, 46190, -74766, -4380, -7526, 29141, -938, -10898, -7734, 33281, 10313, 77373, 1699, 6563].span()
};
    let tree_50 = xgb_inference::Tree {
    base_weights: array![-5090, 24897, -41683, 126953, 1794, -211484, -8695, 21549, 113906, -32248, 42526, -97148, -28646, -67910, 8383, -44688, 52910, 35400, -78516, -55078, 71517, 3164, -16055, -781, 35625, -14971, -3574, 7589, 34512, -165495, -40799, -26543, -14453, 51328, 34492, 18809, -12287, 5713, -1729, -10898, -63574, -14136, 1465, -5859, -645, 25625, -10055, 1141, -25693].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 21, 0, 23, 25, 0, 27, 29, 31, 33, 0, 0, 35, 0, 0, 0, 37, 0, 39, 41, 0, 43, 0, 45, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 22, 0, 24, 26, 0, 28, 30, 32, 34, 0, 0, 36, 0, 0, 0, 38, 0, 40, 42, 0, 44, 0, 46, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 1, 2, 9, 6, 0, 1, 9, 0, 0, 0, 6, 1, 0, 1, 2, 0, 2, 0, 0, 2, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 530000, 260000, 7520000, 5480000, 1840000, -58230000, 190000, 113906, 3770000, -30330000, -97148, 1240000, -67910, 3960000, 140000, 52910, 3740000, 110000, 18210000, 640000, 3164, -16055, 210000, 35625, -14971, -3574, 810000, 34512, 10250000, 2590000, -26543, 45150000, 51328, 15560000, 18809, 7560000, 5713, -1729, -10898, -63574, -14136, 1465, -5859, -645, 25625, -10055, 1141, -25693].span()
};
    let tree_51 = xgb_inference::Tree {
    base_weights: array![-3763, 20909, -33884, 109989, 769, -223047, -13147, 20768, 96797, -50732, 17219, -86719, -13652, -57715, 126, -35078, 45000, -98047, -2734, 62891, -4036, -20488, 45920, -12852, -4688, -54023, -10677, 5625, -12793, -195, 100781, 21635, -58984, 28460, -43499, 29609, 16741, -7852, 3047, -5918, -1172, 1641, -1172, 44805, 5586, -3293, 29326, -4297, -23320, 17754, -23379, -20977, 5414, 9463, -674].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 31, 33, 35, 0, 0, 0, 37, 0, 39, 41, 43, 45, 47, 49, 51, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 32, 34, 36, 0, 0, 0, 38, 0, 40, 42, 44, 46, 48, 50, 52, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 3, 0, 9, 6, 0, 9, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 9, 2, 4, 0, 0, 0, 0, 0, 0, 0, 8, 7, 1, 1, 9, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 530000, 210000, 7520000, 200000, 12510000, -58230000, 190000, 96797, -10520000, 9510000, -86719, -13652, -57715, 15190000, 160000, 45000, 3860000, 590000, 1810000, -7900000, 560000, 340000, -12852, -4688, -54023, 9200000, 5625, 160000, 2150000, 40000, 620000, 5250000, 6400000, -3110000, 29609, 970000, -7852, 3047, -5918, -1172, 1641, -1172, 44805, 5586, -3293, 29326, -4297, -23320, 17754, -23379, -20977, 5414, 9463, -674].span()
};
    let tree_52 = xgb_inference::Tree {
    base_weights: array![-3039, 17588, -28226, 94754, 159, -189583, -10560, 19141, 82266, -43115, 14000, -73711, -11602, -49043, 739, -28047, 38262, -83398, -2266, 50439, -2973, -42676, 17243, -9346, -2344, -45938, -9115, 4805, -10840, 0, 80703, -43136, 20703, 7031, -28242, 30420, -20768, -6680, 2578, -4297, -59, 1406, -938, 35859, 4492, -20801, 17109, 10534, -5068, 4922, -4570, -14297, 11641, -586, -17227].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 31, 33, 35, 0, 0, 0, 37, 0, 39, 41, 43, 45, 47, 49, 0, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 32, 34, 36, 0, 0, 0, 38, 0, 40, 42, 44, 46, 48, 50, 0, 52, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 3, 0, 9, 6, 0, 9, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 8, 7, 9, 1, 0, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 530000, 210000, 7520000, 200000, 12510000, -58230000, 190000, 82266, -10520000, 9510000, -73711, -11602, -49043, 2460000, 140000, 38262, 3860000, 590000, 1810000, 18210000, 1420000, 970000, -9346, -2344, -45938, 9200000, 4805, 4520000, 2150000, 40000, 930000, -9000000, 11920000, -28242, 300000, 7560000, -6680, 2578, -4297, -59, 1406, -938, 35859, 4492, -20801, 17109, 10534, -5068, 4922, -4570, -14297, 11641, -586, -17227].span()
};
    let tree_53 = xgb_inference::Tree {
    base_weights: array![-3320, 14998, -25668, 81920, -110, -161068, -10776, 17839, 69961, -36279, 11469, -62637, -9844, -41660, -1242, -21953, 32520, -70801, -1406, -25000, 24301, -7219, 24023, -8398, -2578, -39023, -7682, 4102, -8594, -8073, -18984, -3555, 49727, 20742, -12816, -5684, 2227, -4395, -508, 176, -5078, 17227, -5013, 23066, 2156, -9902, 1258].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 31, 33, 0, 0, 0, 0, 35, 0, 37, 39, 0, 41, 43, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 32, 34, 0, 0, 0, 0, 36, 0, 38, 40, 0, 42, 44, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 4, 0, 3, 0, 9, 6, 0, 9, 9, 0, 0, 0, 6, 0, 0, 1, 1, 6, 1, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![130000, 530000, 210000, 7520000, 200000, 12510000, -58230000, 190000, 69961, -10520000, -30330000, -62637, -9844, -41660, 3960000, 160000, 32520, 3860000, 590000, 510000, 5480000, 0, 24023, -8398, -2578, -39023, 9200000, 4102, 160000, 5160000, -18984, 1890000, 15560000, 20742, 190000, -5684, 2227, -4395, -508, 176, -5078, 17227, -5013, 23066, 2156, -9902, 1258].span()
};
    let tree_54 = xgb_inference::Tree {
    base_weights: array![-2625, 4959, -47109, 22249, -5923, -35391, -26128, -12500, 77691, -27362, 20910, 4818, -35658, 5220, -48984, 59414, 37891, -49888, 15479, 2170, 37326, 117, 2051, -14941, -14238, -17041, 48438, -33164, -5957, 625, 75000, -3460, -84277, 38750, -17480, 9821, -4922, 10352, 49089, -5234, -1113, -488, -12656, 22656, -4922, 1289, -3242, -20977, 10723, 0, 30000, -7359, 9844, -41689, -7102, 17109, 2266, -10371, -78, -1230, 6387, 3711, 645, 2871, 16523].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 21, 23, 25, 27, 0, 29, 31, 33, 35, 37, 0, 0, 39, 0, 41, 43, 0, 45, 47, 49, 51, 53, 55, 57, 59, 0, 61, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 22, 24, 26, 28, 0, 30, 32, 34, 36, 38, 0, 0, 40, 0, 42, 44, 0, 46, 48, 50, 52, 54, 56, 58, 60, 0, 62, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 2, 2, 2, 0, 6, 8, 2, 7, 4, 0, 0, 0, 3, 0, 6, 6, 0, 3, 6, 0, 0, 0, 0, 1, 3, 0, 1, 0, 2, 1, 4, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4160000, 740000, 4230000, 380000, 2010000, -35391, 140000, 70000, 420000, 480000, 100000, 20410000, 11180000, 9200000, 200000, 59414, 60000, 60000, 16390000, 7360000, 60000, 117, 2051, 9650000, -14238, 1290000, 400000, -33164, 270000, 1880000, 490000, 9740000, 210000, 1630000, 17070000, 4520000, -4922, 12560000, 1420000, -5234, -1113, -488, -12656, 22656, -4922, 1289, -3242, -20977, 10723, 0, 30000, -7359, 9844, -41689, -7102, 17109, 2266, -10371, -78, -1230, 6387, 3711, 645, 2871, 16523].span()
};
    let tree_55 = xgb_inference::Tree {
    base_weights: array![-2102, 14807, -16670, 5729, 53190, -35742, 5447, -28472, 21628, 28008, 9766, -1519, -58431, 16462, -26484, -8545, -28184, 50508, 4123, -2227, 5391, -9877, 18490, -90848, -10872, 29167, -5339, -11914, -12715, -6230, 5625, -33398, 21124, -4805, 1094, 0, 8320, -127500, 521, -7773, 3125, 16699, 6641, 4766, -19922, -4141, -938, -18281, -1318, -6375, 12695, -12383, -51367, -3516, 3750, 1523, -410, -938, 3691, -8789, -2109].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 23, 25, 27, 29, 0, 0, 31, 0, 0, 33, 35, 37, 39, 41, 43, 45, 0, 0, 0, 47, 49, 0, 0, 0, 0, 51, 53, 0, 55, 0, 57, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 24, 26, 28, 30, 0, 0, 32, 0, 0, 34, 36, 38, 40, 42, 44, 46, 0, 0, 0, 48, 50, 0, 0, 0, 0, 52, 54, 0, 56, 0, 58, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 9, 7, 2, 2, 1, 2, 0, 2, 0, 0, 1, 8, 9, 0, 9, 0, 0, 3, 0, 0, 0, 0, 4, 7, 2, 0, 0, 0, 0, 0, 2, 9, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, -2470000, 720000, 370000, 740000, 4930000, 3720000, 11170000, 420000, 28008, 160000, 3960000, 50000, -7900000, 11180000, -10490000, -28184, 50508, 670000, -2227, 5391, 25070000, 16220000, 1340000, 350000, 1630000, 4200000, 9650000, -12715, -6230, 5625, 790000, -35880000, -4805, 1094, 0, 8320, 9940000, 6640000, -7773, 37470000, 16699, 12830000, 4766, 17070000, -4141, -938, -18281, -1318, -6375, 12695, -12383, -51367, -3516, 3750, 1523, -410, -938, 3691, -8789, -2109].span()
};
    let tree_56 = xgb_inference::Tree {
    base_weights: array![-1930, 11560, -13545, 23711, -8023, -28281, 3581, 9910, 42891, -53281, 18012, -564, -46712, 12528, -22188, -4715, 42383, -176, -19893, 35078, -2656, -7422, 15625, -101823, -25508, 22569, -4622, -9766, -10781, -15625, 12148, 22383, 7617, 2813, 14727, 5208, -2891, -12266, 938, 0, 7031, -39258, -6563, -11806, -22324, 12979, 5013, 3828, -16504, -3359, -820, -8438, 469, -1875, 4297, 410, 1934, -820, -4189, -9883, -318, -410, 3555, -7441, -1641].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 21, 23, 25, 27, 29, 31, 0, 0, 33, 35, 37, 39, 41, 43, 45, 47, 49, 0, 51, 0, 0, 53, 0, 0, 55, 0, 57, 0, 0, 0, 0, 0, 59, 0, 0, 61, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 22, 24, 26, 28, 30, 32, 0, 0, 34, 36, 38, 40, 42, 44, 46, 48, 50, 0, 52, 0, 0, 54, 0, 0, 56, 0, 58, 0, 0, 0, 0, 0, 60, 0, 0, 62, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 0, 7, 0, 3, 1, 2, 9, 0, 1, 0, 1, 3, 9, 0, 3, 2, 0, 0, 1, 3, 0, 0, 0, 6, 2, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, 13730000, 720000, 11170000, 1680000, 4930000, 3720000, -2470000, 42891, 3740000, 29920000, 3960000, 1590000, -7900000, 11180000, 1200000, 740000, -176, -19893, 11910000, 2490000, 25070000, 16220000, 12510000, 970000, 1630000, 4200000, 9650000, -10781, 40000, 12148, 22383, 160000, 2813, 14727, 30880000, -2891, 150000, 938, 0, 7031, -39258, -6563, 9940000, -22324, 12979, 2380000, 3828, 17070000, -3359, -820, -8438, 469, -1875, 4297, 410, 1934, -820, -4189, -9883, -318, -410, 3555, -7441, -1641].span()
};
    let tree_57 = xgb_inference::Tree {
    base_weights: array![-1528, 10193, -11624, 20137, -5889, -23516, 2235, 8409, 36445, -41406, 14497, -1953, -40980, 9515, -18594, -3013, 33659, -20977, -16797, 4785, 13828, 8125, -10026, -67773, -7357, 17578, -4167, -8008, -9141, -11621, 32422, 17891, 5762, -176, -6602, -3281, 4102, 5977, 195, -3750, 352, -102148, 651, -5508, 2734, 10020, 4102, 3047, -13867, -2734, -703, -599, -9111, 2285, 12305, -664, 4453, 664, -2305, -469, 820, -8965, -34883, -2930, 3223, 1289, -293, -264, 2813, -6328, -1328].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 21, 23, 25, 27, 29, 31, 0, 33, 35, 0, 37, 39, 41, 43, 45, 47, 49, 0, 51, 53, 0, 55, 0, 0, 57, 0, 0, 59, 0, 0, 61, 63, 0, 65, 0, 67, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 22, 24, 26, 28, 30, 32, 0, 34, 36, 0, 38, 40, 42, 44, 46, 48, 50, 0, 52, 54, 0, 56, 0, 0, 58, 0, 0, 60, 0, 0, 62, 64, 0, 66, 0, 68, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 0, 7, 0, 3, 1, 2, 9, 0, 0, 6, 2, 8, 9, 0, 3, 2, 0, 0, 9, 0, 6, 0, 4, 7, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, 13730000, 720000, 11170000, 1680000, 9920000, 3720000, -2470000, 36445, 13980000, 2550000, 490000, 50000, -7900000, 11180000, 1200000, 740000, -20977, 16590000, -21640000, 13828, 60000, 37140000, 1340000, 350000, 1630000, 4200000, 9650000, -9141, 130000, 160000, 17891, 1240000, -176, -6602, 30880000, 4102, 5977, 16220000, -3750, 352, 2460000, 6640000, -5508, 37470000, 10020, 2380000, 3047, 17070000, -2734, -703, -599, -9111, 2285, 12305, -664, 4453, 664, -2305, -469, 820, -8965, -34883, -2930, 3223, 1289, -293, -264, 2813, -6328, -1328].span()
};
    let tree_58 = xgb_inference::Tree {
    base_weights: array![-1028, 8752, -9459, 17285, -5048, -18672, 1302, 7340, 30938, -17813, 4427, -1016, -33026, 7171, -15391, -1674, 27148, -2273, 11719, 8496, -6306, -73047, -16016, 13585, -3646, -1875, -7793, -26367, 7457, 14297, 4980, -13574, 3662, 130, 5039, -7747, 352, -28125, -4746, -32109, 3281, 7734, 3190, 5469, -14583, -11172, 938, 10430, 375, -1465, 2969, -176, -5313, -797, 3193, -645, 703, 59, -2813, -1797, -14258, 2773, -1133, -625, 1904, 2422, -352, -5391, -1172].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 17, 19, 21, 23, 25, 27, 29, 31, 0, 33, 35, 37, 39, 41, 43, 0, 0, 45, 47, 0, 49, 51, 53, 55, 0, 57, 0, 0, 0, 59, 61, 0, 63, 65, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 18, 20, 22, 24, 26, 28, 30, 32, 0, 34, 36, 38, 40, 42, 44, 0, 0, 46, 48, 0, 50, 52, 54, 56, 0, 58, 0, 0, 0, 60, 62, 0, 64, 66, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 0, 7, 0, 0, 1, 2, 9, 0, 0, 6, 2, 3, 9, 0, 1, 2, 3, 0, 1, 0, 0, 1, 2, 3, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 2, 0, 0, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, 13730000, 720000, 11170000, 13980000, 9920000, 3720000, -2470000, 30938, -17813, 2550000, 210000, 1590000, -7900000, 11180000, 290000, 740000, 1680000, 11719, 270000, 37140000, 12510000, 15890000, 1630000, 3450000, -1875, -7793, 1880000, 0, 14297, 160000, 16590000, -21640000, 2930000, 5039, 490000, 352, -28125, -4746, 6500000, 5510000, 7734, 12830000, 4200000, 17070000, -11172, 938, 10430, 375, -1465, 2969, -176, -5313, -797, 3193, -645, 703, 59, -2813, -1797, -14258, 2773, -1133, -625, 1904, 2422, -352, -5391, -1172].span()
};
    let tree_59 = xgb_inference::Tree {
    base_weights: array![-850, 6451, -9265, -5258, 12281, -54948, -4388, 3711, -26367, 26250, 5501, -820, -23906, 696, -18457, 9717, -13542, -1563, -15117, 10723, 2632, 5748, -6445, -12148, -4362, -2637, 13616, -5449, -645, -1289, 586, -22266, 7480, -2474, 10590, -12333, 5469, -2314, 1563, 5391, -1875, -10723, -1758, -18, 5640, -1797, 234, 5977, 781, -1318, -5156, 2578, 469, -293, 996].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 29, 0, 0, 31, 33, 35, 0, 37, 0, 39, 0, 0, 0, 0, 41, 43, 45, 47, 49, 51, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 30, 0, 0, 32, 34, 36, 0, 38, 0, 40, 0, 0, 0, 0, 42, 44, 46, 48, 50, 52, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 2, 2, 1, 0, 1, 0, 0, 9, 2, 0, 0, 0, 0, 0, 1, 7, 4, 0, 1, 0, 5, 0, 0, 0, 0, 2, 4, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 420000, 4930000, 4030000, 210000, 3580000, 26250, 0, -820, -23906, -7900000, 6700000, 0, 2460000, 11170000, -15117, 10723, 300000, 620000, 100000, -12148, 15190000, -2637, 190000, -5449, -645, -1289, 586, 740000, 300000, 6640000, 1630000, 5250000, 10100000, -2314, 11180000, 5391, -1875, -10723, -1758, -18, 5640, -1797, 234, 5977, 781, -1318, -5156, 2578, 469, -293, 996].span()
};
    let tree_60 = xgb_inference::Tree {
    base_weights: array![-994, 4772, -7629, -5288, 9813, -46745, -3464, 2070, -22363, 22266, 4036, -703, -20332, 577, -14648, 6885, -11458, -1302, -12832, -596, 18034, -1339, 4141, -9727, -3320, -4948, 11654, -4629, -527, -1055, 469, 9141, -4015, 9453, 9141, 5859, -3955, -1787, 1302, -2227, 0, 5508, -352, 5234, -2336, 3223, 645, -859, 3281, -164, -2478, -234, 820].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 29, 0, 31, 33, 35, 0, 0, 37, 39, 41, 0, 0, 0, 0, 0, 43, 45, 0, 47, 49, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 30, 0, 32, 34, 36, 0, 0, 38, 40, 42, 0, 0, 0, 0, 0, 44, 46, 0, 48, 50, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 2, 2, 1, 0, 3, 0, 0, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 420000, 4930000, 4030000, 210000, 3580000, 22266, 4000000, -703, -20332, 24520000, 6700000, 140000, 2460000, 11170000, -12832, 0, 20410000, 4200000, 4141, -9727, 15190000, 0, 400000, -4629, -527, -1055, 469, 9141, 560000, 19840000, 9141, 200000, -7900000, -1787, 11180000, -2227, 0, 5508, -352, 5234, -2336, 3223, 645, -859, 3281, -164, -2478, -234, 820].span()
};
    let tree_61 = xgb_inference::Tree {
    base_weights: array![-666, 4980, -5532, -5820, 9460, -10957, 803, 1606, -10898, 18867, 4173, -234, -19709, -804, 4219, -5339, 11621, 7793, 1897, 4883, -3125, -33724, -2409, 5301, -4616, -6445, -2083, 1445, 4805, -20964, 5407, 521, 2695, -4036, 352, -17070, -7910, -7813, 2246, 3555, 313, -7861, 3027, -2266, -469, 0, -938, -645, -8789, -2344, 2836, -117, 352, 0, -1453, -3867, 1055, -2930, -586, 898, 0, 352, -469, -4531, -879, -176, 1328].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 17, 19, 21, 23, 0, 25, 27, 0, 29, 31, 33, 35, 37, 39, 41, 43, 45, 0, 0, 47, 49, 51, 0, 53, 0, 0, 55, 57, 59, 0, 61, 63, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 18, 20, 22, 24, 0, 26, 28, 0, 30, 32, 34, 36, 38, 40, 42, 44, 46, 0, 0, 48, 50, 52, 0, 54, 0, 0, 56, 58, 60, 0, 62, 64, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 0, 2, 1, 1, 9, 0, 0, 1, 2, 8, 3, 0, 9, 0, 0, 1, 1, 0, 4, 7, 0, 1, 2, 0, 0, 0, 0, 9, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, 370000, 720000, 11170000, 420000, 9920000, 28150000, -10490000, -10898, 18867, 0, 210000, 50000, 1250000, 4219, -15490000, 1270000, 7793, 290000, 270000, 37140000, 570000, 350000, 4200000, 15190000, 110000, 7520000, 1445, 4805, 160000, -35880000, 2930000, 2695, 490000, 352, -17070, 6640000, 12870000, 37470000, 3555, 19140000, 270000, 11180000, -2266, -469, 0, -938, -645, -8789, -2344, 2836, -117, 352, 0, -1453, -3867, 1055, -2930, -586, 898, 0, 352, -469, -4531, -879, -176, 1328].span()
};
    let tree_62 = xgb_inference::Tree {
    base_weights: array![-569, -1300, 7266, 2796, -6445, 19531, -952, -30859, -1502, 4948, 16055, 5241, -4446, -14805, -2083, 6855, -3391, -2891, 6621, -703, 8301, -13281, 3288, 117, -1055, -5742, -1937, -1367, -78, 820, -674, -156, 3398, -5879, -914, 415, 3633, 1787, -1004].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 0, 23, 0, 25, 27, 0, 29, 31, 33, 35, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 0, 24, 0, 26, 28, 0, 30, 32, 34, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 4, 0, 1, 4, 0, 0, 2, 7, 6, 0, 3, 0, 0, 0, 0, 9, 0, 0, 1, 1, 7, 5, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 130000, 7266, 530000, 260000, 7520000, 9510000, 1840000, 0, 190000, 16055, 200000, 18210000, -14805, 1240000, 6855, -58230000, 160000, 6621, 590000, 1770000, 350000, 790000, 117, -1055, -5742, 210000, -1367, -78, 820, -674, -156, 3398, -5879, -914, 415, 3633, 1787, -1004].span()
};
    let tree_63 = xgb_inference::Tree {
    base_weights: array![-172, -793, 6211, 4467, -3464, -3177, 16710, 617, -6207, 1136, -12031, 13594, 7471, -3190, 2204, -12480, -3245, -2979, 9082, -8379, -1074, 130, 5898, -977, -1523, -1116, 4834, -5060, 3646, -117, -3164, 3828, -293, -703, 39, 5625, -2203, 117, -469, -750, 469, 2842, 47, -787, -2607, 1594, -703].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 19, 0, 21, 23, 25, 0, 27, 29, 31, 0, 33, 35, 0, 37, 0, 39, 41, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 20, 0, 22, 24, 26, 0, 28, 30, 32, 0, 34, 36, 0, 38, 0, 40, 42, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 2, 0, 8, 2, 9, 0, 0, 3, 0, 1, 4, 3, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 4, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 740000, 6211, 380000, 11620000, 70000, 420000, -10300000, 12510000, 9200000, 200000, 13594, 4930000, 420000, 930000, -12480, 20570000, 4370000, 400000, -8379, 11170000, 160000, 5898, 2150000, -1523, 100000, 10100000, 270000, 40460000, -117, -3164, 3828, -293, -703, 39, 5625, -2203, 117, -469, -750, 469, 2842, 47, -787, -2607, 1594, -703].span()
};
    let tree_64 = xgb_inference::Tree {
    base_weights: array![-23, 2861, -3357, -3215, 5906, -25260, -1055, 898, -12695, 11602, 2930, -762, -10605, 849, -6396, -2846, 7227, -1042, -7148, 226, 11003, 2902, -2109, -4336, -1302, -326, -2695, 3047, -234, -586, 117, 4805, -1541, 1852, 5273, -1758, 4332, -6406, 1823, -2832, 1172, -1055, 645, 3203, -1121, -117, -879, 2109, 536, -2656, -547, -234, 996, -234, -977, 0, 527].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 29, 0, 31, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 43, 0, 0, 45, 47, 49, 51, 53, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 30, 0, 32, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 44, 0, 0, 46, 48, 50, 52, 54, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 2, 0, 1, 0, 3, 0, 0, 9, 2, 1, 3, 0, 0, 1, 0, 7, 9, 0, 1, 9, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 420000, 4930000, 4030000, 9200000, 3580000, 11602, 4000000, -762, -10605, -7900000, 6700000, 4370000, 400000, 11170000, -7148, 0, 20410000, 480000, -4340000, -4336, 15190000, -15490000, -2695, 3047, -234, -586, 117, 4805, 560000, 1852, 5273, 12570000, 1630000, 17070000, 1420000, 7460000, 11180000, -1055, 645, 3203, -1121, -117, -879, 2109, 536, -2656, -547, -234, 996, -234, -977, 0, 527].span()
};
    let tree_65 = xgb_inference::Tree {
    base_weights: array![-40, 2439, -2905, -2855, 5094, -21484, -951, 586, -10742, 9844, 2572, -645, -9023, 543, -5127, -2455, 5762, -781, -6094, -781, 8247, -2669, 1584, -3477, -1042, -326, -2285, 2422, -176, -469, 117, 2204, -4336, 5449, 260, -117, -1113, 3602, -391, -703, 1042, -674, 703, 4102, 81, 791, -898, 2383, 368, -742, 656, 0, 469].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 29, 0, 31, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 0, 43, 0, 0, 45, 0, 0, 47, 49, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 30, 0, 32, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 0, 44, 0, 0, 46, 0, 0, 48, 50, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 2, 0, 1, 0, 4, 0, 0, 7, 2, 1, 3, 0, 0, 4, 4, 1, 9, 0, 1, 9, 0, 0, 0, 0, 0, 1, 0, 0, 6, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 420000, 4930000, 4030000, 9200000, 3580000, 9844, 300000, -645, -9023, 480000, 6700000, 4370000, 400000, 11170000, -6094, 220000, 420000, 12570000, -8190000, -3477, 15190000, -10790000, -2285, 2422, -176, -469, 117, 0, -4336, 5449, 970000, -117, -1113, 1630000, 5480000, -703, 11180000, -674, 703, 4102, 81, 791, -898, 2383, 368, -742, 656, 0, 469].span()
};
    let tree_66 = xgb_inference::Tree {
    base_weights: array![-34, 1974, -2356, -2434, 4188, -18229, -690, 430, -8984, 8320, 2051, -527, -7676, -6771, -14, 1910, -1934, -521, -5156, 123, 7813, -3281, 234, -732, 3438, 293, 2227, -352, 117, 3457, -1150, 1359, 3633, 879, -2163, 586, 1406, -996, 385, -1162, 1105, 768, -938, -1406, -281].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 0, 27, 0, 29, 31, 0, 0, 33, 35, 37, 0, 0, 0, 0, 39, 0, 0, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 0, 28, 0, 30, 32, 0, 0, 34, 36, 38, 0, 0, 0, 0, 40, 0, 0, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 9, 1, 1, 0, 3, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 4, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 420000, 4930000, -58230000, 8300000, 3580000, 8320, 4000000, -527, -7676, 28170000, 23200000, 5480000, -1934, 11170000, -5156, 0, 20410000, -3281, 234, 120000, 37470000, 0, 2227, -352, 117, 3457, 300000, 1359, 3633, 40000, 180000, 586, 1406, -996, 385, -1162, 1105, 768, -938, -1406, -281].span()
};
    let tree_67 = xgb_inference::Tree {
    base_weights: array![-80, 1605, -2026, -2133, 3484, -15495, -612, 313, -7715, 7031, 1676, -469, -6504, 459, -3613, -1786, 3906, -521, -4395, 123, 6315, 1855, -977, -2383, -846, -260, -1641, 1719, -234, -352, 117, 2930, -955, 1055, 3047, -625, 3174, -2511, 977, -557, 781, -820, 234, 1846, -836, -469, 156, 117, 1430, -1195, 234, 439, 0, 59, 293].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 29, 0, 31, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 43, 0, 0, 45, 47, 49, 51, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 30, 0, 32, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 44, 0, 0, 46, 48, 50, 52, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 2, 0, 1, 0, 3, 0, 0, 9, 2, 1, 3, 0, 0, 1, 0, 9, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 3, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 420000, 4930000, 4030000, 9200000, 3580000, 7031, 4000000, -469, -6504, -7940000, 6700000, 4370000, 400000, 11170000, -4395, 0, 20410000, -30330000, 2050000, -2383, 15190000, 0, -1641, 1719, -234, -352, 117, 2930, 0, 1055, 3047, 6640000, 670000, 930000, 11620000, -557, 11180000, -820, 234, 1846, -836, -469, 156, 117, 1430, -1195, 234, 439, 0, 59, 293].span()
};
    let tree_68 = xgb_inference::Tree {
    base_weights: array![-57, 2455, -1156, 5329, -2881, -1546, 2578, 1986, 5078, -10156, 1237, 4219, -2180, 675, 2461, -3750, -820, 0, 445, 3164, 0, -4053, 176, -1563, 1709, 391, -586, -7199, 320, -2031, 854, -703, -156, 723, -78, -4043, -664, 653, -703, -674, -176, -70, 686].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 0, 15, 17, 19, 21, 23, 0, 0, 0, 0, 0, 0, 25, 27, 29, 31, 33, 0, 0, 35, 37, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 0, 16, 18, 20, 22, 24, 0, 0, 0, 0, 0, 0, 26, 28, 30, 32, 34, 0, 0, 36, 38, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 0, 6, 0, 7, 7, 0, 6, 0, 0, 1, 0, 8, 9, 0, 0, 0, 0, 0, 0, 1, 7, 3, 0, 7, 0, 0, 3, 5, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![410000, 13730000, 4070000, 9200000, 170000, 0, 2578, 190000, 5078, 13980000, 300000, 3810000, 50000, -10790000, 2461, -3750, -820, 0, 445, 3164, 27910000, 710000, 930000, 0, 170000, 391, -586, 1680000, 120000, 12870000, 220000, -703, -156, 723, -78, -4043, -664, 653, -703, -674, -176, -70, 686].span()
};
    let tree_69 = xgb_inference::Tree {
    base_weights: array![-29, 1341, -1611, -1653, 2844, -11589, -560, 39, -5469, 12598, 941, -293, -4922, -4948, -70, 998, -1289, -260, -3164, 5234, -293, -368, 4492, -2344, 117, -472, 1875, -1563, 1953, -234, 117, -2133, 4297, 1660, 2031, 1060, -1042, 293, 820, -586, -117, 723, -117, -3223, -156, 1875, 273, 625, 59, 586, -234, -867, -92].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 0, 23, 25, 27, 0, 29, 0, 0, 0, 31, 33, 0, 0, 35, 37, 39, 41, 0, 0, 43, 45, 47, 0, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 0, 24, 26, 28, 0, 30, 0, 0, 0, 32, 34, 0, 0, 36, 38, 40, 42, 0, 0, 44, 46, 48, 0, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 8, 2, 0, 9, 1, 1, 0, 3, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![240000, 370000, 270000, 70000, 560000, 4930000, -58230000, 8300000, 3580000, 13730000, 4000000, -293, -4922, 28170000, 23200000, 140000, -1289, 11170000, -3164, 5234, -293, -3110000, 11910000, -2344, 117, 4930000, 37470000, 0, 210000, -234, 117, 1880000, 1120000, 6810000, 2031, 1630000, 1280000, 293, 820, -586, -117, 723, -117, -3223, -156, 1875, 273, 625, 59, 586, -234, -867, -92].span()
};
    let tree_70 = xgb_inference::Tree {
    base_weights: array![-155, 1099, -1235, 2520, -1172, -3223, -270, 1131, 4336, -6641, 1997, -994, -4160, 678, -2490, -391, 3795, -234, -7910, 4375, -781, 1250, -2455, -36, 1476, -1992, -949, -2109, 4004, 684, 1934, -2695, -703, 117, 2070, 651, -586, 2474, -391, -3438, 0, 195, -352, 2500, 156, -492, 156, -91, -2754, 1816, 391, 59, 234, 879, 234, -176, 0, -78, -1641, -176, 176, 146, -195, 176, 850, 156, -78].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 21, 0, 23, 25, 27, 29, 0, 31, 33, 35, 37, 39, 41, 43, 0, 45, 47, 49, 0, 0, 0, 0, 0, 0, 51, 0, 53, 55, 57, 59, 61, 0, 63, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 22, 0, 24, 26, 28, 30, 0, 32, 34, 36, 38, 40, 42, 44, 0, 46, 48, 50, 0, 0, 0, 0, 0, 0, 52, 0, 54, 56, 58, 60, 62, 0, 64, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 0, 6, 0, 3, 6, 2, 1, 0, 1, 0, 9, 0, 3, 2, 9, 4, 0, 0, 1, 3, 0, 2, 1, 3, 0, 1, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, 13730000, 110000, 11170000, 1680000, 60000, 3720000, 4370000, 4336, 3740000, 29920000, -8190000, -4160, 2760000, 4230000, -3110000, 220000, -234, 18210000, 11910000, 2490000, 16750000, 1280000, 15870000, 5030000, -1992, 15190000, -4580000, 0, 684, 1934, -2695, -703, 117, 2070, 30880000, -586, 1890000, 58650000, 4400000, 160000, 1250000, -352, 1420000, 1740000, -492, 156, -91, -2754, 1816, 391, 59, 234, 879, 234, -176, 0, -78, -1641, -176, 176, 146, -195, 176, 850, 156, -78].span()
};
    let tree_71 = xgb_inference::Tree {
    base_weights: array![-121, 891, -992, -1445, 1868, -3223, -365, 87, -2285, 3633, 852, -335, -3516, -3516, -14, -911, 1563, -391, 3571, -2474, 1016, -1699, 117, -309, 1406, -1328, 176, 117, 547, 949, -6510, 2051, -586, -879, -234, 0, 1270, 781, -716, 234, 586, -439, -117, 776, -318, -2344, -586, -273, 59, 430, 117, -273, 492, -117, -664].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 17, 19, 0, 21, 23, 25, 27, 29, 31, 33, 35, 0, 0, 37, 39, 41, 0, 0, 0, 43, 45, 0, 47, 0, 0, 0, 49, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 18, 20, 0, 22, 24, 26, 28, 30, 32, 34, 36, 0, 0, 38, 40, 42, 0, 0, 0, 44, 46, 0, 48, 0, 0, 0, 50, 52, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 2, 7, 0, 2, 1, 9, 9, 0, 0, 4, 0, 0, 0, 1, 1, 1, 4, 4, 0, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![180000, 370000, 270000, 11170000, 420000, 18840000, -58230000, -10490000, -2285, 3633, 300000, 4930000, -3516, 28170000, 23200000, 4370000, 590000, 220000, 420000, 2460000, 190000, -1699, 117, 4200000, 37470000, 3580000, 176, 117, 547, 7340000, 1880000, 2051, 1760000, -879, -234, 0, 16750000, 160000, -5090000, 234, 586, -439, -117, 776, -318, -2344, -586, -273, 59, 430, 117, -273, 492, -117, -664].span()
};
    let tree_72 = xgb_inference::Tree {
    base_weights: array![-172, 1094, -686, 2455, -1786, -4688, -416, -391, 4080, -1992, 130, -176, -1934, 998, -1250, -1302, 391, 2051, 3047, 195, -293, -1563, 2103, -4375, -601, -469, -117, 234, -117, 98, 3203, -117, 0, 130, -732, 651, 4297, -8333, 313, -1465, -234, 117, -39, 1230, -59, -117, 176, -234, 449, 1582, 59, -762, -2988, -242, 211].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 29, 0, 0, 31, 33, 35, 37, 39, 0, 0, 0, 0, 41, 43, 0, 0, 45, 0, 47, 49, 51, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 30, 0, 0, 32, 34, 36, 38, 40, 0, 0, 0, 0, 42, 44, 0, 0, 46, 0, 48, 50, 52, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 4, 1, 9, 4, 0, 7, 2, 0, 0, 2, 0, 0, 9, 7, 0, 1, 2, 0, 0, 0, 1, 4, 0, 9, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3770000, 130000, 3860000, -15490000, 260000, 4930000, 170000, 430000, 7520000, -1992, 110000, -176, -1934, -35880000, 270000, 0, 810000, 110000, 3047, 195, 11170000, 5160000, 300000, 12510000, -58230000, -469, -117, 234, -117, 1270000, -2240000, -117, 0, 9200000, -732, 200000, 29920000, 2460000, 313, -1465, 15190000, 117, -39, 1230, -59, -117, 176, -234, 449, 1582, 59, -762, -2988, -242, 211].span()
};
    let tree_73 = xgb_inference::Tree {
    base_weights: array![-201, 840, -622, 1981, -1563, -1298, 514, -326, 3299, -1699, 65, -2490, -24, -1230, 998, -352, 391, 1563, 2578, 156, -293, -1536, -2520, -639, 1107, 1563, -781, 234, -117, 1230, 614, -117, 0, -4036, -841, -1283, 391, 498, 0, 2148, 78, -293, 0, -59, 381, -176, -1641, -11, -1055, -586, -88, -39, 234, -59, 59, 938, 164, 117, -78].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 23, 0, 25, 0, 27, 29, 0, 0, 31, 33, 0, 35, 37, 39, 41, 0, 0, 0, 43, 0, 0, 45, 47, 49, 51, 0, 53, 55, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 24, 0, 26, 0, 28, 30, 0, 0, 32, 34, 0, 36, 38, 40, 42, 0, 0, 0, 44, 0, 0, 46, 48, 50, 52, 0, 54, 56, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 4, 5, 9, 4, 2, 9, 2, 0, 0, 2, 2, 1, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 9, 3, 8, 2, 0, 0, 0, 1, 0, 0, 0, 5, 6, 0, 0, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3770000, 130000, 190000, -15490000, 260000, 1840000, -58230000, 430000, 7520000, -1699, 110000, 1760000, 13130000, -1230, 6050000, -352, 810000, 0, 2578, 156, 11170000, 3860000, -2520, -7510000, 4460000, 280000, 23790000, 234, -117, 1230, 150000, -117, 0, 4930000, 120000, 740000, 1240000, 498, 26060000, 420000, 380000, -293, 0, -59, 381, -176, -1641, -11, -1055, -586, -88, -39, 234, -59, 59, 938, 164, 117, -78].span()
};
    let tree_74 = xgb_inference::Tree {
    base_weights: array![-155, 742, -518, 1730, -1339, -3516, -316, -195, 2821, -1465, 65, -176, -1406, 994, -697, -313, 488, 1318, 2227, 156, -293, 49, 2637, -2648, -67, 234, -59, 1055, 502, -117, 0, -1302, 716, 234, 898, -2168, -1172, -1055, 181, -23, 391, -469, -117, 293, 39, -820, -59, -4, 820].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 0, 25, 27, 0, 0, 29, 31, 33, 35, 37, 0, 0, 0, 39, 0, 0, 41, 43, 0, 0, 0, 45, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 0, 26, 28, 0, 0, 30, 32, 34, 36, 38, 0, 0, 0, 40, 0, 0, 42, 44, 0, 0, 0, 46, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 4, 1, 9, 4, 0, 2, 4, 0, 0, 2, 0, 0, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 9, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3770000, 130000, 3860000, -15490000, 260000, 4930000, 680000, 0, 7520000, -1465, 110000, -176, -1406, 490000, 1840000, -313, 810000, 0, 2227, 156, 11170000, 9200000, 4400000, 12510000, -58230000, 234, -59, 1055, 590000, -117, 0, 2460000, 400000, 234, 898, -2168, 9740000, -1055, 4070000, -23, 391, -469, -117, 293, 39, -820, -59, -4, 820].span()
};
    let tree_75 = xgb_inference::Tree {
    base_weights: array![-132, 837, -376, -477, 2669, -470, 703, -2188, 1328, 1875, 703, 238, -964, -684, -1230, 879, 195, 59, 234, 879, -18, -5566, -296, -293, -78, 0, 117, 358, -426, -1992, -352, -879, -98, -29, 305, -381, 15, -179, 186].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 19, 21, 23, 0, 0, 25, 0, 0, 0, 27, 29, 31, 0, 0, 0, 0, 33, 35, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 20, 22, 24, 0, 0, 26, 0, 0, 0, 28, 30, 32, 0, 0, 0, 0, 34, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 6, 6, 1, 0, 0, 1, 0, 0, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 9, 0, 0, 0, 0, 3, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1290000, 300000, 4070000, 60000, 530000, 11620000, 703, 140000, 160000, 1875, 590000, 0, 13980000, 0, -1230, 879, 25070000, 59, 234, 879, 120000, 110000, -58230000, -293, -78, 0, 117, 930000, 200000, -1992, -352, -879, 13130000, -29, 305, -381, 15, -179, 186].span()
};
    let tree_76 = xgb_inference::Tree {
    base_weights: array![-92, 595, -391, -443, 2734, 762, -507, -781, 391, 1602, 625, -850, -284, -273, -879, 0, 146, 0, 313, 308, -706, 167, -293, 59, -59, -670, 811, -3776, -293, -146, 234, -398, 195, -39, 425, -176, -1523, 67, -277].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 17, 0, 19, 21, 0, 0, 0, 23, 0, 25, 27, 29, 0, 0, 0, 31, 33, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 18, 0, 20, 22, 0, 0, 0, 24, 0, 26, 28, 30, 0, 0, 0, 32, 34, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 1, 7, 0, 0, 2, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 0, 0, 9, 7, 9, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![680000, 380000, 0, 190000, 13730000, 762, 990000, 11170000, 2930000, 1602, 16590000, -850, 240000, 110000, -879, 0, 146, 16220000, 313, -33250000, 270000, -10790000, -293, 59, -59, 4000000, 670000, 4930000, 16390000, -146, 234, -398, 195, -39, 425, -176, -1523, 67, -277].span()
};
    let tree_77 = xgb_inference::Tree {
    base_weights: array![-75, 484, -317, -391, 2288, 645, -416, -710, 391, 1289, 625, -2604, -260, -273, -762, 0, 146, 0, 313, -938, -234, -723, 105, -614, 391, 59, -59, -1256, 446, -703, 297, -215, 0, 352, -78, -29, -720, 23, 273, 172, -78].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 17, 19, 21, 23, 0, 0, 0, 25, 0, 0, 0, 27, 29, 31, 33, 0, 0, 35, 37, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 18, 20, 22, 24, 0, 0, 0, 26, 0, 0, 0, 28, 30, 32, 34, 0, 0, 36, 38, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 1, 7, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 3, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![680000, 380000, 0, 190000, 13730000, 645, 790000, 11170000, 2930000, 1289, 16590000, 1880000, 2010000, 9200000, -762, 0, 146, 16220000, 313, -938, -234, 18210000, -58230000, 8640000, 9510000, 59, -59, 6640000, 20570000, -703, 4160000, -215, 0, 352, -78, -29, -720, 23, 273, 172, -78].span()
};
    let tree_78 = xgb_inference::Tree {
    base_weights: array![-6, 484, -220, -208, 1897, -355, 1016, -564, 279, 1016, 625, 81, -837, 439, -117, -98, -645, -521, 703, 0, 313, 977, -206, -3320, -239, -176, 56, -234, 0, 313, 130, 59, -59, 1660, -78, -664, 273, 0, -1328, -586, -23, 59, -117, 0, 59, 586, 117, -318, 59, -33, 264, -107, 151].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 23, 0, 0, 25, 0, 27, 29, 31, 0, 33, 35, 37, 39, 0, 41, 0, 0, 0, 43, 0, 0, 45, 0, 47, 49, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 24, 0, 0, 26, 0, 28, 30, 32, 0, 34, 36, 38, 40, 0, 42, 0, 0, 0, 44, 0, 0, 46, 0, 48, 50, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 6, 1, 0, 4, 0, 1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 3, 0, 0, 9, 1, 0, 9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![680000, 380000, 2990000, 3860000, 13730000, 150000, 29920000, 3580000, 9200000, 1016, 16590000, 2150000, 260000, 439, -117, 0, -645, 2460000, 400000, 16220000, 313, -2240000, 10260000, 1240000, -58230000, -176, 1290000, -234, 0, 313, 10250000, 59, -59, 1890000, -78, 18210000, 350000, 0, -1328, -586, 15190000, 59, -117, 0, 59, 586, 117, -318, 59, -33, 264, -107, 151].span()
};
    let tree_79 = xgb_inference::Tree {
    base_weights: array![-6, 446, -203, -130, 1618, -543, 105, -477, 335, 1055, 716, 410, -692, 483, -547, -98, -527, -391, 703, 0, 322, -1050, 223, 178, 893, -469, -260, -176, 56, -176, 0, 313, 130, 59, -59, -326, -2578, -156, 234, -49, 176, 352, 130, 0, -234, 59, -117, 0, 59, 73, -352, -1094, -195, 59, -88, 39, -117, 59, 0, 39, -117].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 21, 23, 25, 27, 0, 29, 31, 33, 0, 35, 37, 39, 41, 0, 43, 0, 45, 0, 0, 0, 47, 0, 0, 49, 51, 53, 0, 55, 0, 0, 57, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 22, 24, 26, 28, 0, 30, 32, 34, 0, 36, 38, 40, 42, 0, 44, 0, 46, 0, 0, 0, 48, 0, 0, 50, 52, 54, 0, 56, 0, 0, 58, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 4, 1, 2, 0, 0, 0, 3, 0, 0, 4, 1, 9, 3, 0, 8, 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![680000, 380000, 2010000, 3860000, 530000, 0, 4160000, 3580000, 9200000, 1055, 490000, 410, 300000, 12560000, 4230000, 0, -527, 2460000, 400000, 16220000, 322, 130000, 20570000, 390000, 4460000, -469, 170000, -176, 1290000, -176, 0, 313, 10250000, 59, -59, 1250000, 12510000, 300000, 234, 170000, 176, 352, 11620000, 37470000, -234, 59, -117, 0, 59, 73, -352, -1094, -195, 59, -88, 39, -117, 59, 0, 39, -117].span()
};
    let tree_80 = xgb_inference::Tree {
    base_weights: array![23, 409, -146, -104, 1451, 352, -199, -434, 335, 938, 651, -469, -104, 0, -1302, -391, 703, 0, 293, -160, 352, -176, 195, -117, -469, -176, 0, 313, 130, 59, -59, 207, -377, 0, 117, 0, 59, -18, 258, -781, -32].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 17, 0, 19, 21, 23, 25, 27, 29, 0, 31, 0, 0, 33, 0, 0, 0, 0, 0, 35, 0, 0, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 18, 0, 20, 22, 24, 26, 28, 30, 0, 32, 0, 0, 34, 0, 0, 0, 0, 0, 36, 0, 0, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 1, 1, 1, 0, 2, 1, 0, 0, 2, 0, 6, 0, 0, 0, 3, 0, 0, 3, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![680000, 380000, 0, 3860000, 530000, 352, 790000, 1290000, 9200000, 938, 490000, -469, 4070000, 0, 11170000, 2460000, 400000, 16220000, 293, 1250000, 352, -176, 40000, -117, -469, -176, 0, 313, 10250000, 59, -59, 930000, 1680000, 0, 117, 0, 59, -18, 258, -781, -32].span()
};
    let tree_81 = xgb_inference::Tree {
    base_weights: array![40, 374, -127, 629, -456, -343, 391, 39, 1215, -352, 195, -456, 176, -130, 694, -174, 293, 781, 446, 0, 117, 0, -684, -313, 117, 78, 352, -146, 65, 195, -117, -859, 614, -703, -473, 0, -117, 117, -260, 0, 59, -410, -117, 39, 234, -211, 94, 0, -117].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 0, 23, 25, 27, 0, 0, 29, 0, 0, 31, 33, 35, 0, 37, 0, 0, 39, 0, 0, 41, 43, 0, 45, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 0, 24, 26, 28, 0, 0, 30, 0, 0, 32, 34, 36, 0, 38, 0, 0, 40, 0, 0, 42, 44, 0, 46, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 8, 0, 0, 2, 4, 3, 6, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3, 3, 0, 0, 2, 0, 0, 8, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![440000, 70000, 28170000, 9200000, 370000, 2670000, 4000000, 190000, 13730000, -352, 4520000, 1480000, 176, 58650000, 12570000, 160000, 293, 781, 4930000, 0, 117, 930000, 1590000, 30880000, 117, 380000, 352, -146, 40000, 195, -117, 1880000, 560000, -703, 15890000, 0, -117, 117, 37140000, 0, 59, -410, -117, 39, 234, -211, 94, 0, -117].span()
};
    let tree_82 = xgb_inference::Tree {
    base_weights: array![69, -138, 268, -12, -1432, 703, 138, -195, 52, -586, -59, -58, 781, 335, -184, 81, -879, 332, -130, 178, 205, -352, -49, -352, 187, -313, -59, 59, -117, 151, -94, 33, -234, 18, 234].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 0, 13, 0, 0, 15, 17, 19, 21, 23, 25, 0, 27, 29, 0, 0, 31, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 0, 14, 0, 0, 16, 18, 20, 22, 24, 26, 0, 28, 30, 0, 0, 32, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 4, 0, 0, 1, 0, 4, 0, 0, 6, 1, 3, 1, 0, 1, 0, 0, 2, 0, 0, 8, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![12870000, 11620000, 13730000, 0, 12510000, 703, 20570000, -195, 100000, -586, -59, 970000, 35810000, 930000, 290000, 13980000, 15890000, 332, 37470000, 740000, 205, -352, 140000, -352, 1060000, -313, -59, 59, -117, 151, -94, 33, -234, 18, 234].span()
};
    let tree_83 = xgb_inference::Tree {
    base_weights: array![63, 353, -65, -26, 1116, -116, 352, -195, 146, 586, 651, -232, 284, -558, 260, 195, 313, 31, -721, -130, 391, -234, 0, 586, -260, 78, 0, 547, -93, -527, -488, 0, -59, 188, 78, 78, 234, -117, 0, 234, -59, -98, 59, -211, 117, 0, 59].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 0, 0, 15, 17, 19, 21, 23, 25, 0, 27, 29, 31, 33, 0, 0, 35, 37, 0, 0, 39, 41, 0, 43, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 0, 0, 16, 18, 20, 22, 24, 26, 0, 28, 30, 32, 34, 0, 0, 36, 38, 0, 0, 40, 42, 0, 44, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 6, 0, 1, 4, 0, 9, 0, 0, 0, 4, 7, 1, 7, 0, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 9, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![680000, 380000, 4070000, 13980000, 530000, 570000, 352, -10490000, 146, 586, 16590000, 150000, 170000, 3860000, 180000, 16220000, 313, 810000, 210000, 30880000, 40000, -234, 0, 1270000, 2460000, 78, 0, -2240000, 10260000, -527, 15890000, 0, -59, 188, 23340000, 78, 234, -117, 0, 234, -59, -98, 59, -211, 117, 0, 59].span()
};
    let tree_84 = xgb_inference::Tree {
    base_weights: array![98, 64, 352, 372, -75, 52, 1004, -179, 284, -98, 146, 59, 1107, 16, -541, -130, 391, 117, -234, 59, 1250, 240, -210, -469, -326, 0, -59, 188, 78, -39, 117, 469, 156, 195, -29, -215, 59, -23, -313, 0, 59].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 21, 23, 25, 27, 29, 0, 0, 31, 33, 35, 0, 37, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 22, 24, 26, 28, 30, 0, 0, 32, 34, 36, 0, 38, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 2, 4, 0, 0, 4, 7, 0, 0, 0, 3, 3, 4, 0, 8, 0, 0, 0, 3, 9, 3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 680000, 352, 380000, 570000, 13980000, 3810000, 150000, 170000, 10250000, 146, 59, -3130000, 1250000, 210000, 30880000, 40000, 2930000, -234, 59, 440000, -7900000, 3860000, -469, 460000, 0, -59, 188, 23340000, -39, 117, 469, 156, 195, -29, -215, 59, -23, -313, 0, 59].span()
};
    let tree_85 = xgb_inference::Tree {
    base_weights: array![103, 70, 352, 316, -42, 78, 781, -137, 284, -65, 146, 293, 117, 47, -481, -130, 391, 117, -195, 251, -195, -1074, -195, 0, -59, 188, 78, -39, 117, 127, -156, 78, -167, 0, -430, 29, -273, 0, 59].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 0, 0, 0, 19, 21, 23, 25, 27, 0, 29, 31, 33, 35, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 0, 0, 0, 20, 22, 24, 26, 28, 0, 30, 32, 34, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 2, 4, 0, 9, 4, 7, 0, 0, 0, 0, 9, 4, 0, 8, 0, 0, 5, 7, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 680000, 352, 380000, 570000, 13980000, -15040000, 150000, 170000, 10250000, 146, 293, 117, -7900000, 260000, 30880000, 40000, 2930000, -195, 580000, 170000, 1240000, 460000, 0, -59, 188, 23340000, -39, 117, 127, -156, 78, -167, 0, -430, 29, -273, 0, 59].span()
};
    let tree_86 = xgb_inference::Tree {
    base_weights: array![115, 82, 352, 124, -469, 67, 651, -234, 0, 110, -352, 234, 78, 363, 27, -17, 205, -117, 44].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 0, 0, 0, 15, 17, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 0, 0, 0, 16, 18, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 1, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, 22700000, 1740000, -234, 0, 1290000, -352, 234, 78, 1880000, 3960000, -17, 205, -117, 44].span()
};
    let tree_87 = xgb_inference::Tree {
    base_weights: array![98, 64, 352, 7, 488, 279, -75, 234, -260, -87, 781, -189, 182, 0, -117, -456, 488, 78, 293, -67, -859, 446, -43, -164, 0, 195, 0, -69, 117, -293, -59, 156, 0, 59, -117].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 13, 15, 17, 19, 21, 0, 0, 23, 25, 0, 0, 27, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 14, 16, 18, 20, 22, 0, 0, 24, 26, 0, 0, 28, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 7, 0, 1, 2, 1, 3, 0, 0, 6, 0, 3, 5, 0, 0, 0, 1, 0, 0, 9, 3, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 1550000, 352, 1290000, 2080000, 300000, 4000000, 234, 9650000, 190000, 1270000, 3450000, 140000, 0, -117, 2930000, 270000, 78, 293, -5180000, 3980000, 870000, 450000, -164, 0, 195, 0, -69, 117, -293, -59, 156, 0, 59, -117].span()
};
    let tree_88 = xgb_inference::Tree {
    base_weights: array![103, 70, 352, 13, 488, 279, -66, 234, -260, -87, 781, -391, 21, 0, -117, -456, 488, 78, 293, 0, -195, 586, -45, -164, 0, 195, 0, -59, 29, 234, 0, -98, 29].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 13, 15, 17, 19, 21, 0, 0, 23, 25, 0, 0, 27, 0, 29, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 14, 16, 18, 20, 22, 0, 0, 24, 26, 0, 0, 28, 0, 30, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 7, 0, 1, 2, 1, 1, 0, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 1550000, 352, 1290000, 2080000, 300000, 3960000, 234, 9650000, 190000, 1270000, 2580000, 210000, 0, -117, 2930000, 270000, 78, 293, 160000, -195, 400000, 1840000, -164, 0, 195, 0, -59, 29, 234, 0, -98, 29].span()
};
    let tree_89 = xgb_inference::Tree {
    base_weights: array![109, 76, 352, 118, -469, 67, 586, -234, 0, 103, -293, 88, 234, 33, 391, 41, -96, 17, 234].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 0, 0, 0, 15, 17, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 0, 0, 0, 16, 18, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 1, 5, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, 22700000, 1660000, -234, 0, -2470000, -293, 88, 234, -7900000, 2460000, 41, -96, 17, 234].span()
};
    let tree_90 = xgb_inference::Tree {
    base_weights: array![115, 82, 352, 124, -469, 74, 586, -234, 0, 103, -234, 88, 234, 33, 391, 41, -96, 17, 234].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 0, 0, 0, 15, 17, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 0, 0, 0, 16, 18, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 1, 5, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, 22700000, 1660000, -234, 0, -2470000, -234, 88, 234, -7900000, 2460000, 41, -96, 17, 234].span()
};
    let tree_91 = xgb_inference::Tree {
    base_weights: array![121, 87, 352, 130, -469, 81, 586, -234, 0, 8, 391, 88, 234, 61, -586, 56, 234, 117, -13, 0, -234, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 9, 0, 0, 0, 1, 3, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, -4420000, 2460000, 88, 234, 1290000, 410000, 60000, 234, 117, -13, 0, -234, -94, 195].span()
};
    let tree_92 = xgb_inference::Tree {
    base_weights: array![132, 99, 352, 143, -469, 94, 586, -234, 0, 24, 391, 88, 234, -160, 174, 56, 234, -19, -176, 234, 10, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 1, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 630000, 60000, 234, -19, -176, 234, 10, -94, 195].span()
};
    let tree_93 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let tree_94 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let tree_95 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let tree_96 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let tree_97 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let tree_98 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let tree_99 = xgb_inference::Tree {
    base_weights: array![126, 93, 352, 136, -469, 88, 586, -234, 0, 16, 391, 88, 234, -160, 159, 56, 234, -19, -176, 352, 23, -94, 195].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 0, 0, 13, 15, 0, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 0, 0, 14, 16, 0, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 0, 1, 2, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4070000, 8630000, 352, 24330000, 12020000, -2470000, 1660000, -234, 0, 12870000, 2460000, 88, 234, 10250000, 13730000, 60000, 234, -19, -176, 352, 23, -94, 195].span()
};
    let num_trees: u32 = 100;
    let base_score: i32 = 2147483647;
    let opt_type: u8 = 0;
    let trees: Span<xgb_inference::Tree> = array![tree_0, tree_1, tree_2, tree_3, tree_4, tree_5, tree_6, tree_7, tree_8, tree_9, tree_10, tree_11, tree_12, tree_13, tree_14, tree_15, tree_16, tree_17, tree_18, tree_19, tree_20, tree_21, tree_22, tree_23, tree_24, tree_25, tree_26, tree_27, tree_28, tree_29, tree_30, tree_31, tree_32, tree_33, tree_34, tree_35, tree_36, tree_37, tree_38, tree_39, tree_40, tree_41, tree_42, tree_43, tree_44, tree_45, tree_46, tree_47, tree_48, tree_49, tree_50, tree_51, tree_52, tree_53, tree_54, tree_55, tree_56, tree_57, tree_58, tree_59, tree_60, tree_61, tree_62, tree_63, tree_64, tree_65, tree_66, tree_67, tree_68, tree_69, tree_70, tree_71, tree_72, tree_73, tree_74, tree_75, tree_76, tree_77, tree_78, tree_79, tree_80, tree_81, tree_82, tree_83, tree_84, tree_85, tree_86, tree_87, tree_88, tree_89, tree_90, tree_91, tree_92, tree_93, tree_94, tree_95, tree_96, tree_97, tree_98, tree_99].span();
    let mut result: i32 = xgb_inference::accumulate_scores_from_trees(num_trees, trees, input_vector, 0, 0);

    if opt_type == 1 {
        // Implement logic here
    } else {
        result = result + base_score;
    }

    return result;
}